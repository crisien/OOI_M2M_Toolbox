import numpy as np
import os
import re
import requests
import sys
import time
from netCDF4 import Dataset
import pandas as pd

from bs4 import BeautifulSoup
from tqdm import tqdm

# setup constants used to access the data from the different M2M interfaces
BASE_URL = 'https://ooinet.oceanobservatories.org/api/m2m/'  # base M2M URL
SENSOR_URL = '12576/sensor/inv/'                             # Sensor Information

# setup access credentials
AUTH = ['OOIAPI-853A3LA6QI3L62', 'WYAN89W5X4Z0QZ']

def M2M_Call(uframe_dataset_name, start_date, end_date):
    options = '?beginDT=' + start_date + '&endDT=' + end_date + '&format=application/netcdf'
    r = requests.get(BASE_URL + SENSOR_URL + uframe_dataset_name + options, auth=(AUTH[0], AUTH[1]))
    if r.status_code == requests.codes.ok:
        data = r.json()
    else:
        return None

    # wait until the request is completed
    print('Waiting for OOINet to process and prepare data request, this may take up to 20 minutes')
    url = [url for url in data['allURLs'] if re.match(r'.*async_results.*', url)][0]
    check_complete = url + '/status.txt'
    with tqdm(total=400, desc='Waiting') as bar:
        for i in range(400):
            r = requests.get(check_complete)
            bar.update(1)
            if r.status_code == requests.codes.ok:
                bar.n = 400
                bar.last_print_n = 400
                bar.refresh()
                print('\nrequest completed in %f minutes.' % elapsed)
                break
            else:
                time.sleep(3)
                elapsed = (i * 3) / 60

    return data

def M2M_Files(data, tag=''):
    """
    Use a regex tag combined with the results of the M2M data request to collect the data from the THREDDS catalog.
    Collected data is gathered into an xarray dataset for further processing.
    :param data: JSON object returned from M2M data request with details on where the data is to be found for download
    :param tag: regex tag to use in discriminating the data files, so we only collect the correct ones
    :return: the collected data as an xarray dataset
    """
    # Create a list of the files from the request above using a simple regex as a tag to discriminate the files
    url = [url for url in data['allURLs'] if re.match(r'.*thredds.*', url)][0]
    files = list_files(url, tag)
    return files

def list_files(url, tag=''):
    """
    Function to create a list of the NetCDF data files in the THREDDS catalog created by a request to the M2M system.
    :param url: URL to user's THREDDS catalog specific to a data request
    :param tag: regex pattern used to distinguish files of interest
    :return: list of files in the catalog with the URL path set relative to the catalog
    """
    page = requests.get(url).text
    soup = BeautifulSoup(page, 'html.parser')
    pattern = re.compile(tag)
    return [node.get('href') for node in soup.find_all('a', text=pattern)]
	
def M2M_Data(nclist,variables):
	thredds = 'https://opendap.oceanobservatories.org/thredds/dodsC/ooi/'
	#nclist is going to contain more than one url eventually
	for jj in range(len(nclist)):
		url=nclist[jj]
		url=url[25:]
		dap_url = thredds + url + '#fillmismatch'
		openFile = Dataset(dap_url,'r')
		for ii in range(len(variables)):
			dum = openFile.variables[variables[ii].name]
			variables[ii].data = np.append(variables[ii].data, dum[:].data)
	tmp = variables[0].data/60/60/24
	time_converted = pd.to_datetime(tmp, unit='D', origin=pd.Timestamp('1900-01-01'))
	return variables, time_converted
	
class var(object):
    def __init__(self):
        """A Class that generically holds data with a variable name
        and the units as attributes"""
        self.name = ''
        self.data = np.array([])
        self.units = ''

    def __repr__(self):
         return_str = "name: " + self.name + '\n'
         return_str += "units: " + self.units + '\n'
         return_str += "data: size: " + str(self.data.shape)
         return return_str

class structtype(object):
    def __init__(self):
          """ A class that imitates a Matlab structure type
          """
          self._data = []

    def __getitem__(self, index):
          """implement index behavior in the struct"""
          if index == len(self._data):
              self._data.append(var())
          return self._data[index]
	
    def __len__(self):
          return len(self._data)

def M2M_URLs(platform_name,node,instrument_class,method):
	var_list = structtype()
	#MOPAK
	if platform_name == 'CE01ISSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/SBD17/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/SBD11/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/SBD11/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE06ISSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/SBD17/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/SBD11/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/SBD11/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE09OSPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSPM/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
    #METBK
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/SBD11/06-METBKA000/telemetered/metbk_a_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/SBD11/06-METBKA000/telemetered/metbk_a_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/SBD11/06-METBKA000/telemetered/metbk_a_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/SBD11/06-METBKA000/telemetered/metbk_a_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
    #FLORT
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/RID16/02-FLORTD000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE01ISSM' and node == 'BUOY' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/SBD17/06-FLORTD000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/RID16/02-FLORTD000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE06ISSM' and node == 'BUOY' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/SBD17/06-FLORTD000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/RID27/02-FLORTD000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/RID27/02-FLORTD000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/RID27/02-FLORTD000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/RID27/02-FLORTD000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE09OSPM' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSPM/WFP01/04-FLORTK000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
    #FDCHP
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'FDCHP' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/SBD12/08-FDCHPA000/telemetered/fdchp_a_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
    #DOSTA
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/RID16/03-DOSTAD000/telemetered/dosta_abcdjm_ctdbp_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'dosta_ln_optode_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/RID27/04-DOSTAD000/telemetered/dosta_abcdjm_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/RID27/04-DOSTAD000/telemetered/dosta_abcdjm_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/RID16/03-DOSTAD000/telemetered/dosta_abcdjm_ctdbp_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'dosta_ln_optode_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/RID27/04-DOSTAD000/telemetered/dosta_abcdjm_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/RID27/04-DOSTAD000/telemetered/dosta_abcdjm_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/MFD37/03-DOSTAD000/telemetered/dosta_abcdjm_ctdbp_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'dosta_ln_optode_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/MFD37/03-DOSTAD000/telemetered/dosta_abcdjm_ctdbp_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'dosta_ln_optode_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/MFD37/03-DOSTAD000/telemetered/dosta_abcdjm_ctdbp_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'dosta_ln_optode_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/MFD37/03-DOSTAD000/telemetered/dosta_abcdjm_ctdbp_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'dosta_ln_optode_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE09OSPM' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSPM/WFP01/02-DOFSTK000/telemetered/dofst_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
    #ADCP
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/RID26/01-ADCPTA000/telemetered/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/RID26/01-ADCPTC000/telemetered/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/RID26/01-ADCPTA000/telemetered/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/RID26/01-ADCPTC000/telemetered/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/MFD35/04-ADCPTM000/telemetered/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/MFD35/04-ADCPTM000/telemetered/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/MFD35/04-ADCPTC000/telemetered/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/MFD35/04-ADCPSJ000/telemetered/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
    #ZPLSC
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/MFD37/07-ZPLSCC000/telemetered/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/MFD37/07-ZPLSCC000/telemetered/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/MFD37/07-ZPLSCC000/telemetered/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/MFD37/07-ZPLSCC000/telemetered/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/MFD37/07-ZPLSCC000/recovered_host/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/MFD37/07-ZPLSCC000/recovered_host/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/MFD37/07-ZPLSCC000/recovered_host/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/MFD37/07-ZPLSCC000/recovered_host/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
    #WAVSS
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_Stats' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_statistics'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_zero_crossings'
	    var_list[2].name = 'average_wave_height'
	    var_list[3].name = 'mean_spectral_period'
	    var_list[4].name = 'max_wave_height'
	    var_list[5].name = 'significant_wave_height'
	    var_list[6].name = 'significant_period'
	    var_list[7].name = 'wave_height_10'
	    var_list[8].name = 'wave_period_10'
	    var_list[9].name = 'mean_wave_period'
	    var_list[10].name = 'peak_wave_period'
	    var_list[11].name = 'wave_period_tp5'
	    var_list[12].name = 'wave_height_hmo'
	    var_list[13].name = 'mean_direction'
	    var_list[14].name = 'mean_spread'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'counts'
	    var_list[2].units = 'm'
	    var_list[3].units = 'sec'
	    var_list[4].units = 'm'
	    var_list[5].units = 'm'
	    var_list[6].units = 'sec'
	    var_list[7].units = 'm'
	    var_list[8].units = 'sec'
	    var_list[9].units = 'sec'
	    var_list[10].units = 'sec'
	    var_list[11].units = 'sec'
	    var_list[12].units = 'm'
	    var_list[13].units = 'degrees'
	    var_list[14].units = 'degrees'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_Stats' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_statistics'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_zero_crossings'
	    var_list[2].name = 'average_wave_height'
	    var_list[3].name = 'mean_spectral_period'
	    var_list[4].name = 'max_wave_height'
	    var_list[5].name = 'significant_wave_height'
	    var_list[6].name = 'significant_period'
	    var_list[7].name = 'wave_height_10'
	    var_list[8].name = 'wave_period_10'
	    var_list[9].name = 'mean_wave_period'
	    var_list[10].name = 'peak_wave_period'
	    var_list[11].name = 'wave_period_tp5'
	    var_list[12].name = 'wave_height_hmo'
	    var_list[13].name = 'mean_direction'
	    var_list[14].name = 'mean_spread'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'counts'
	    var_list[2].units = 'm'
	    var_list[3].units = 'sec'
	    var_list[4].units = 'm'
	    var_list[5].units = 'm'
	    var_list[6].units = 'sec'
	    var_list[7].units = 'm'
	    var_list[8].units = 'sec'
	    var_list[9].units = 'sec'
	    var_list[10].units = 'sec'
	    var_list[11].units = 'sec'
	    var_list[12].units = 'm'
	    var_list[13].units = 'degrees'
	    var_list[14].units = 'degrees'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_Stats' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_statistics'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_zero_crossings'
	    var_list[2].name = 'average_wave_height'
	    var_list[3].name = 'mean_spectral_period'
	    var_list[4].name = 'max_wave_height'
	    var_list[5].name = 'significant_wave_height'
	    var_list[6].name = 'significant_period'
	    var_list[7].name = 'wave_height_10'
	    var_list[8].name = 'wave_period_10'
	    var_list[9].name = 'mean_wave_period'
	    var_list[10].name = 'peak_wave_period'
	    var_list[11].name = 'wave_period_tp5'
	    var_list[12].name = 'wave_height_hmo'
	    var_list[13].name = 'mean_direction'
	    var_list[14].name = 'mean_spread'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'counts'
	    var_list[2].units = 'm'
	    var_list[3].units = 'sec'
	    var_list[4].units = 'm'
	    var_list[5].units = 'm'
	    var_list[6].units = 'sec'
	    var_list[7].units = 'm'
	    var_list[8].units = 'sec'
	    var_list[9].units = 'sec'
	    var_list[10].units = 'sec'
	    var_list[11].units = 'sec'
	    var_list[12].units = 'm'
	    var_list[13].units = 'degrees'
	    var_list[14].units = 'degrees'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_Stats' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_statistics'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_zero_crossings'
	    var_list[2].name = 'average_wave_height'
	    var_list[3].name = 'mean_spectral_period'
	    var_list[4].name = 'max_wave_height'
	    var_list[5].name = 'significant_wave_height'
	    var_list[6].name = 'significant_period'
	    var_list[7].name = 'wave_height_10'
	    var_list[8].name = 'wave_period_10'
	    var_list[9].name = 'mean_wave_period'
	    var_list[10].name = 'peak_wave_period'
	    var_list[11].name = 'wave_period_tp5'
	    var_list[12].name = 'wave_height_hmo'
	    var_list[13].name = 'mean_direction'
	    var_list[14].name = 'mean_spread'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'counts'
	    var_list[2].units = 'm'
	    var_list[3].units = 'sec'
	    var_list[4].units = 'm'
	    var_list[5].units = 'm'
	    var_list[6].units = 'sec'
	    var_list[7].units = 'm'
	    var_list[8].units = 'sec'
	    var_list[9].units = 'sec'
	    var_list[10].units = 'sec'
	    var_list[11].units = 'sec'
	    var_list[12].units = 'm'
	    var_list[13].units = 'degrees'
	    var_list[14].units = 'degrees'
    #VELPT
	elif platform_name == 'CE01ISSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/SBD17/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/SBD11/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/SBD11/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE06ISSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/SBD17/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/SBD11/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/SBD11/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/RID16/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/RID26/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/RID26/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/RID16/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/RID26/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/RID26/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
    #PCO2W
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'PCO2W' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/RID16/05-PCO2WB000/telemetered/pco2w_abc_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/MFD35/05-PCO2WB000/telemetered/pco2w_abc_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'PCO2W' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/RID16/05-PCO2WB000/telemetered/pco2w_abc_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/MFD35/05-PCO2WB000/telemetered/pco2w_abc_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/MFD35/05-PCO2WB000/telemetered/pco2w_abc_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/MFD35/05-PCO2WB000/telemetered/pco2w_abc_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
    #PHSEN
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/RID16/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/RID26/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/RID26/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/RID16/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/RID26/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/RID26/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/MFD35/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/MFD35/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/MFD35/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/MFD35/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
    #SPKIR
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/RID16/08-SPKIRB000/telemetered/spkir_abj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/RID26/08-SPKIRB000/telemetered/spkir_abj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/RID26/08-SPKIRB000/telemetered/spkir_abj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/RID16/08-SPKIRB000/telemetered/spkir_abj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/RID26/08-SPKIRB000/telemetered/spkir_abj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/RID26/08-SPKIRB000/telemetered/spkir_abj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
    #PRESF
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/MFD35/02-PRESFA000/telemetered/presf_abc_dcl_tide_measurement'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/MFD35/02-PRESFA000/telemetered/presf_abc_dcl_tide_measurement'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/MFD35/02-PRESFB000/telemetered/presf_abc_dcl_tide_measurement'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/MFD35/02-PRESFC000/telemetered/presf_abc_dcl_tide_measurement'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
    #CTDBP
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/RID16/03-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/MFD37/03-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE01ISSM' and node == 'BUOY' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/SBD17/06-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/RID16/03-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/MFD37/03-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE06ISSM' and node == 'BUOY' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/SBD17/06-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/RID27/03-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/RID27/03-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/RID27/03-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/RID27/03-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/MFD37/03-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/MFD37/03-CTDBPE000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
    #VEL3D
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'VEL3D' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/MFD35/01-VEL3DD000/telemetered/vel3d_cd_dcl_velocity_data'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'VEL3D' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/MFD35/01-VEL3DD000/telemetered/vel3d_cd_dcl_velocity_data'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'VEL3D' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/MFD35/01-VEL3DD000/telemetered/vel3d_cd_dcl_velocity_data'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'VEL3D' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/MFD35/01-VEL3DD000/telemetered/vel3d_cd_dcl_velocity_data'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
    #VEL3DK
	elif platform_name == 'CE09OSPM' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSPM/WFP01/01-VEL3DK000/telemetered/vel3d_k_wfp_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CE09OSPM' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSPM/WFP01/03-CTDPFK000/telemetered/ctdpf_ckl_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
    #PCO2A
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/SBD12/04-PCO2AA000/telemetered/pco2a_a_dcl_instrument_water'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/SBD12/04-PCO2AA000/telemetered/pco2a_a_dcl_instrument_water'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/SBD12/04-PCO2AA000/telemetered/pco2a_a_dcl_instrument_water'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/SBD12/04-PCO2AA000/telemetered/pco2a_a_dcl_instrument_water'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
    #PARAD
	elif platform_name == 'CE09OSPM' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSPM/WFP01/05-PARADK000/telemetered/parad_k__stc_imodem_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
    #OPTAA
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/RID16/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/RID27/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/RID27/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/RID16/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/RID27/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/RID27/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/MFD37/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/MFD37/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/MFD37/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/MFD37/01-OPTAAC000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
    #NUTNR
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSM/RID16/07-NUTNRB000/telemetered/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/RID26/07-NUTNRB000/telemetered/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/RID26/07-NUTNRB000/telemetered/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSM/RID16/07-NUTNRB000/telemetered/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/RID26/07-NUTNRB000/telemetered/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/RID26/07-NUTNRB000/telemetered/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
    ##
    #MOPAK
	elif platform_name == 'CE01ISSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/SBD17/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/SBD11/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/SBD11/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE06ISSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/SBD17/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/SBD11/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/SBD11/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE09OSPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSPM/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
    #METBK
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/SBD11/06-METBKA000/recovered_host/metbk_a_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/SBD11/06-METBKA000/recovered_host/metbk_a_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/SBD11/06-METBKA000/recovered_host/metbk_a_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/SBD11/06-METBKA000/recovered_host/metbk_a_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
    #FLORT
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/RID16/02-FLORTD000/recovered_host/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE01ISSM' and node == 'BUOY' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/SBD17/06-FLORTD000/recovered_host/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/RID16/02-FLORTD000/recovered_host/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE06ISSM' and node == 'BUOY' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/SBD17/06-FLORTD000/recovered_host/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/RID27/02-FLORTD000/recovered_host/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/RID27/02-FLORTD000/recovered_host/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/RID27/02-FLORTD000/recovered_host/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/RID27/02-FLORTD000/recovered_host/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
    #FDCHP
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'FDCHP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/SBD12/08-FDCHPA000/recovered_host/fdchp_a_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
    #DOSTA
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/RID16/03-DOSTAD000/recovered_host/dosta_abcdjm_ctdbp_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/RID27/04-DOSTAD000/recovered_host/dosta_abcdjm_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/RID27/04-DOSTAD000/recovered_host/dosta_abcdjm_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/RID16/03-DOSTAD000/recovered_host/dosta_abcdjm_ctdbp_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/RID27/04-DOSTAD000/recovered_host/dosta_abcdjm_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/RID27/04-DOSTAD000/recovered_host/dosta_abcdjm_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/MFD37/03-DOSTAD000/recovered_host/dosta_abcdjm_ctdbp_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'dosta_ln_optode_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/MFD37/03-DOSTAD000/recovered_host/dosta_abcdjm_ctdbp_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'dosta_ln_optode_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/MFD37/03-DOSTAD000/recovered_host/dosta_abcdjm_ctdbp_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'dosta_ln_optode_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/MFD37/03-DOSTAD000/recovered_host/dosta_abcdjm_ctdbp_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'dosta_ln_optode_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
    #ADCP
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/RID26/01-ADCPTA000/recovered_host/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/RID26/01-ADCPTC000/recovered_host/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/RID26/01-ADCPTA000/recovered_host/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/RID26/01-ADCPTC000/recovered_host/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/MFD35/04-ADCPTM000/recovered_host/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/MFD35/04-ADCPTM000/recovered_host/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/MFD35/04-ADCPTC000/recovered_host/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/MFD35/04-ADCPSJ000/recovered_host/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
    #WAVSS
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_Stats' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_statistics_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_zero_crossings'
	    var_list[2].name = 'average_wave_height'
	    var_list[3].name = 'mean_spectral_period'
	    var_list[4].name = 'max_wave_height'
	    var_list[5].name = 'significant_wave_height'
	    var_list[6].name = 'significant_period'
	    var_list[7].name = 'wave_height_10'
	    var_list[8].name = 'wave_period_10'
	    var_list[9].name = 'mean_wave_period'
	    var_list[10].name = 'peak_wave_period'
	    var_list[11].name = 'wave_period_tp5'
	    var_list[12].name = 'wave_height_hmo'
	    var_list[13].name = 'mean_direction'
	    var_list[14].name = 'mean_spread'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'counts'
	    var_list[2].units = 'm'
	    var_list[3].units = 'sec'
	    var_list[4].units = 'm'
	    var_list[5].units = 'm'
	    var_list[6].units = 'sec'
	    var_list[7].units = 'm'
	    var_list[8].units = 'sec'
	    var_list[9].units = 'sec'
	    var_list[10].units = 'sec'
	    var_list[11].units = 'sec'
	    var_list[12].units = 'm'
	    var_list[13].units = 'degrees'
	    var_list[14].units = 'degrees'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_Stats' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_statistics_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_zero_crossings'
	    var_list[2].name = 'average_wave_height'
	    var_list[3].name = 'mean_spectral_period'
	    var_list[4].name = 'max_wave_height'
	    var_list[5].name = 'significant_wave_height'
	    var_list[6].name = 'significant_period'
	    var_list[7].name = 'wave_height_10'
	    var_list[8].name = 'wave_period_10'
	    var_list[9].name = 'mean_wave_period'
	    var_list[10].name = 'peak_wave_period'
	    var_list[11].name = 'wave_period_tp5'
	    var_list[12].name = 'wave_height_hmo'
	    var_list[13].name = 'mean_direction'
	    var_list[14].name = 'mean_spread'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'counts'
	    var_list[2].units = 'm'
	    var_list[3].units = 'sec'
	    var_list[4].units = 'm'
	    var_list[5].units = 'm'
	    var_list[6].units = 'sec'
	    var_list[7].units = 'm'
	    var_list[8].units = 'sec'
	    var_list[9].units = 'sec'
	    var_list[10].units = 'sec'
	    var_list[11].units = 'sec'
	    var_list[12].units = 'm'
	    var_list[13].units = 'degrees'
	    var_list[14].units = 'degrees'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_Stats' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_statistics_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_zero_crossings'
	    var_list[2].name = 'average_wave_height'
	    var_list[3].name = 'mean_spectral_period'
	    var_list[4].name = 'max_wave_height'
	    var_list[5].name = 'significant_wave_height'
	    var_list[6].name = 'significant_period'
	    var_list[7].name = 'wave_height_10'
	    var_list[8].name = 'wave_period_10'
	    var_list[9].name = 'mean_wave_period'
	    var_list[10].name = 'peak_wave_period'
	    var_list[11].name = 'wave_period_tp5'
	    var_list[12].name = 'wave_height_hmo'
	    var_list[13].name = 'mean_direction'
	    var_list[14].name = 'mean_spread'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'counts'
	    var_list[2].units = 'm'
	    var_list[3].units = 'sec'
	    var_list[4].units = 'm'
	    var_list[5].units = 'm'
	    var_list[6].units = 'sec'
	    var_list[7].units = 'm'
	    var_list[8].units = 'sec'
	    var_list[9].units = 'sec'
	    var_list[10].units = 'sec'
	    var_list[11].units = 'sec'
	    var_list[12].units = 'm'
	    var_list[13].units = 'degrees'
	    var_list[14].units = 'degrees'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_Stats' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_statistics_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_zero_crossings'
	    var_list[2].name = 'average_wave_height'
	    var_list[3].name = 'mean_spectral_period'
	    var_list[4].name = 'max_wave_height'
	    var_list[5].name = 'significant_wave_height'
	    var_list[6].name = 'significant_period'
	    var_list[7].name = 'wave_height_10'
	    var_list[8].name = 'wave_period_10'
	    var_list[9].name = 'mean_wave_period'
	    var_list[10].name = 'peak_wave_period'
	    var_list[11].name = 'wave_period_tp5'
	    var_list[12].name = 'wave_height_hmo'
	    var_list[13].name = 'mean_direction'
	    var_list[14].name = 'mean_spread'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'counts'
	    var_list[2].units = 'm'
	    var_list[3].units = 'sec'
	    var_list[4].units = 'm'
	    var_list[5].units = 'm'
	    var_list[6].units = 'sec'
	    var_list[7].units = 'm'
	    var_list[8].units = 'sec'
	    var_list[9].units = 'sec'
	    var_list[10].units = 'sec'
	    var_list[11].units = 'sec'
	    var_list[12].units = 'm'
	    var_list[13].units = 'degrees'
	    var_list[14].units = 'degrees'
    #VELPT
	elif platform_name == 'CE01ISSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/SBD17/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/SBD11/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/SBD11/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE06ISSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'RecoveredHost':
    #uframe_dataset_name = 'CE06ISSM/RID16/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    uframe_dataset_name = 'CE06ISSM/RID16/04-VELPTA000/recovered_host/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/SBD11/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/SBD11/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/RID16/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/RID26/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/RID26/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/RID16/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/RID26/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/RID26/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
    #PCO2W
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'PCO2W' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/RID16/05-PCO2WB000/recovered_host/pco2w_abc_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/MFD35/05-PCO2WB000/recovered_host/pco2w_abc_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'PCO2W' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/RID16/05-PCO2WB000/recovered_host/pco2w_abc_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/MFD35/05-PCO2WB000/recovered_host/pco2w_abc_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/MFD35/05-PCO2WB000/recovered_host/pco2w_abc_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/MFD35/05-PCO2WB000/recovered_host/pco2w_abc_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
    #PHSEN
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/RID16/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/RID26/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/RID26/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/RID16/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/RID26/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/RID26/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/MFD35/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/MFD35/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/MFD35/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/MFD35/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
    #SPKIR
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/RID16/08-SPKIRB000/recovered_host/spkir_abj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/RID26/08-SPKIRB000/recovered_host/spkir_abj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/RID26/08-SPKIRB000/recovered_host/spkir_abj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/RID16/08-SPKIRB000/recovered_host/spkir_abj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/RID26/08-SPKIRB000/recovered_host/spkir_abj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/RID26/08-SPKIRB000/recovered_host/spkir_abj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
    #PRESF
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/MFD35/02-PRESFA000/recovered_host/presf_abc_dcl_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/MFD35/02-PRESFA000/recovered_host/presf_abc_dcl_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/MFD35/02-PRESFB000/recovered_host/presf_abc_dcl_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/MFD35/02-PRESFC000/recovered_host/presf_abc_dcl_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
    #CTDBP
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/RID16/03-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/MFD37/03-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE01ISSM' and node == 'BUOY' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/SBD17/06-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/RID16/03-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/MFD37/03-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE06ISSM' and node == 'BUOY' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/SBD17/06-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/RID27/03-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/RID27/03-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/RID27/03-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/RID27/03-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/MFD37/03-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/MFD37/03-CTDBPE000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
    #VEL3D
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'VEL3D' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/MFD35/01-VEL3DD000/recovered_host/vel3d_cd_dcl_velocity_data_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'VEL3D' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/MFD35/01-VEL3DD000/recovered_host/vel3d_cd_dcl_velocity_data_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'VEL3D' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/MFD35/01-VEL3DD000/recovered_host/vel3d_cd_dcl_velocity_data_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'VEL3D' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/MFD35/01-VEL3DD000/recovered_host/vel3d_cd_dcl_velocity_data_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
    #PCO2A
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/SBD12/04-PCO2AA000/recovered_host/pco2a_a_dcl_instrument_water_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/SBD12/04-PCO2AA000/recovered_host/pco2a_a_dcl_instrument_water_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/SBD12/04-PCO2AA000/recovered_host/pco2a_a_dcl_instrument_water_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/SBD12/04-PCO2AA000/recovered_host/pco2a_a_dcl_instrument_water_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
    #OPTAA
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/RID16/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/RID27/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/RID27/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/RID16/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/RID27/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/RID27/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/MFD37/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/MFD37/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/MFD37/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/MFD37/01-OPTAAC000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
    #NUTNR
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE01ISSM/RID16/07-NUTNRB000/recovered_host/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/RID26/07-NUTNRB000/recovered_host/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/RID26/07-NUTNRB000/recovered_host/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE06ISSM/RID16/07-NUTNRB000/recovered_host/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/RID26/07-NUTNRB000/recovered_host/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/RID26/07-NUTNRB000/recovered_host/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/RID16/03-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/MFD37/03-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE01ISSM' and node == 'BUOY' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/SBD17/06-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/RID16/03-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/MFD37/03-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE06ISSM' and node == 'BUOY' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/SBD17/06-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE02SHSM/RID27/03-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/RID27/03-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE04OSSM/RID27/03-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/RID27/03-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/MFD37/03-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/MFD37/03-CTDBPE000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE09OSPM' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CE09OSPM/WFP01/03-CTDPFK000/recovered_wfp/ctdpf_ckl_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE02SHSM/RID26/01-ADCPTA000/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE04OSSM/RID26/01-ADCPTC000/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/RID26/01-ADCPTA000/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/RID26/01-ADCPTC000/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/MFD35/04-ADCPTM000/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/MFD35/04-ADCPTM000/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/MFD35/04-ADCPTC000/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/MFD35/04-ADCPSJ000/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/MFD37/07-ZPLSCC000/recovered_inst/zplsc_echogram_data'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/MFD37/07-ZPLSCC000/recovered_inst/zplsc_echogram_data'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/MFD37/07-ZPLSCC000/recovered_inst/zplsc_echogram_data'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/MFD37/07-ZPLSCC000/recovered_inst/zplsc_echogram_data'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE01ISSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/SBD17/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE02SHSM/SBD11/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE04OSSM/SBD11/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE06ISSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/SBD17/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/SBD11/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/SBD11/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/RID16/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE02SHSM/RID26/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE04OSSM/RID26/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/RID16/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/RID26/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/RID26/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CE09OSPM' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CE09OSPM/WFP01/01-VEL3DK000/recovered_wfp/vel3d_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'VEL3D' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/MFD35/01-VEL3DD000/recovered_inst/vel3d_cd_dcl_velocity_data_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'VEL3D' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/MFD35/01-VEL3DD000/recovered_inst/vel3d_cd_dcl_velocity_data_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'VEL3D' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/MFD35/01-VEL3DD000/recovered_inst/vel3d_cd_dcl_velocity_data_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'VEL3D' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/MFD35/01-VEL3DD000/recovered_inst/vel3d_cd_dcl_velocity_data_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/MFD35/02-PRESFA000/recovered_inst/presf_abc_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'presf_tide_pressure'
	    var_list[2].name = 'presf_tide_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/MFD35/02-PRESFA000/recovered_inst/presf_abc_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'presf_tide_pressure'
	    var_list[2].name = 'presf_tide_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/MFD35/02-PRESFB000/recovered_inst/presf_abc_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'presf_tide_pressure'
	    var_list[2].name = 'presf_tide_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/MFD35/02-PRESFC000/recovered_inst/presf_abc_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'presf_tide_pressure'
	    var_list[2].name = 'presf_tide_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/RID16/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE02SHSM/RID26/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE04OSSM/RID26/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/RID16/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/RID26/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/RID26/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/MFD35/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/MFD35/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/MFD35/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/MFD35/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'PCO2W' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/RID16/05-PCO2WB000/recovered_inst/pco2w_abc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/MFD35/05-PCO2WB000/recovered_inst/pco2w_abc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'PCO2W' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/RID16/05-PCO2WB000/recovered_inst/pco2w_abc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/MFD35/05-PCO2WB000/recovered_inst/pco2w_abc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/MFD35/05-PCO2WB000/recovered_inst/pco2w_abc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/MFD35/05-PCO2WB000/recovered_inst/pco2w_abc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE09OSPM' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CE09OSPM/WFP01/05-PARADK000/recovered_wfp/parad_k__stc_imodem_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/RID16/07-NUTNRB000/recovered_inst/suna_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE02SHSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE02SHSM/RID26/07-NUTNRB000/recovered_inst/suna_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE04OSSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE04OSSM/RID26/07-NUTNRB000/recovered_inst/suna_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/RID16/07-NUTNRB000/recovered_inst/suna_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE07SHSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/RID26/07-NUTNRB000/recovered_inst/suna_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE09OSSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/RID26/07-NUTNRB000/recovered_inst/suna_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'FDCHP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE02SHSM/SBD12/08-FDCHPA000/recovered_inst/fdchp_a_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE01ISSM' and node == 'BUOY' and instrument_class == 'FLORT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/SBD17/06-FLORTD000/recovered_inst/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE06ISSM' and node == 'BUOY' and instrument_class == 'FLORT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/SBD17/06-FLORTD000/recovered_inst/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CE09OSPM' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CE09OSPM/WFP01/04-FLORTK000/recovered_wfp/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CE09OSPM' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CE09OSPM/WFP01/02-DOFSTK000/recovered_wfp/dofst_k_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CE01ISSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/RID16/03-DOSTAD000/recovered_inst/dosta_abcdjm_ctdbp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'ctd_tc_oxygen'
	    var_list[3].name = 'ctdbp_seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	elif platform_name == 'CE06ISSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/RID16/03-DOSTAD000/recovered_inst/dosta_abcdjm_ctdbp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'ctd_tc_oxygen'
	    var_list[3].name = 'ctdbp_seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/MFD37/03-DOSTAD000/recovered_inst/dosta_abcdjm_ctdbp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'ctd_tc_oxygen'
	    var_list[3].name = 'ctdbp_seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/MFD37/03-DOSTAD000/recovered_inst/dosta_abcdjm_ctdbp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'ctd_tc_oxygen'
	    var_list[3].name = 'ctdbp_seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	elif platform_name == 'CE07SHSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE07SHSM/MFD37/03-DOSTAD000/recovered_inst/dosta_abcdjm_ctdbp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'ctd_tc_oxygen'
	    var_list[3].name = 'ctdbp_seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	elif platform_name == 'CE09OSSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE09OSSM/MFD37/03-DOSTAD000/recovered_inst/dosta_abcdjm_ctdbp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'ctd_tc_oxygen'
	    var_list[3].name = 'ctdbp_seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	elif platform_name == 'CE01ISSM' and node == 'MFN' and instrument_class == 'WAVSS_Stats' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE01ISSM/MFD35/04-ADCPTM000/recovered_inst/adcpt_m_instrument_log9_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'significant_wave_height'
	    var_list[2].name = 'peak_wave_period'
	    var_list[3].name = 'peak_wave_direction'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'seconds'
	    var_list[3].units = 'degrees'
	elif platform_name == 'CE06ISSM' and node == 'MFN' and instrument_class == 'WAVSS_Stats' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE06ISSM/MFD35/04-ADCPTM000/recovered_inst/adcpt_m_instrument_log9_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'significant_wave_height'
	    var_list[2].name = 'peak_wave_period'
	    var_list[3].name = 'peak_wave_direction'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'seconds'
	    var_list[3].units = 'degrees'
	elif platform_name == 'CE02SHBP' and node == 'BEP' and instrument_class == 'CTD' and method == 'Streamed':
	    uframe_dataset_name = 'CE02SHBP/LJ01D/06-CTDBPN106/streamed/ctdbp_no_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_no_seawater_pressure'
	    var_list[5].name = 'ctdbp_no_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE04OSBP' and node == 'BEP' and instrument_class == 'CTD' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSBP/LJ01C/06-CTDBPO108/streamed/ctdbp_no_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_no_seawater_pressure'
	    var_list[5].name = 'ctdbp_no_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE02SHBP' and node == 'BEP' and instrument_class == 'DOSTA' and method == 'Streamed':
	    uframe_dataset_name = 'CE02SHBP/LJ01D/06-CTDBPN106/streamed/ctdbp_no_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'ctd_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE04OSBP' and node == 'BEP' and instrument_class == 'DOSTA' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSBP/LJ01C/06-CTDBPO108/streamed/ctdbp_no_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'ctd_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CE02SHBP' and node == 'BEP' and instrument_class == 'PHSEN' and method == 'Streamed':
	    uframe_dataset_name = 'CE02SHBP/LJ01D/10-PHSEND103/streamed/phsen_data_record'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE04OSBP' and node == 'BEP' and instrument_class == 'PHSEN' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSBP/LJ01C/10-PHSEND107/streamed/phsen_data_record'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE02SHBP' and node == 'BEP' and instrument_class == 'PCO2W' and method == 'Streamed':
	    uframe_dataset_name = 'CE02SHBP/LJ01D/09-PCO2WB103/streamed/pco2w_b_sami_data_record'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE04OSBP' and node == 'BEP' and instrument_class == 'PCO2W' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSBP/LJ01C/09-PCO2WB104/streamed/pco2w_b_sami_data_record'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CE02SHBP' and node == 'BEP' and instrument_class == 'ADCP' and method == 'Streamed':
	    uframe_dataset_name = 'CE02SHBP/LJ01D/05-ADCPTB104/streamed/adcp_velocity_beam'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE04OSBP' and node == 'BEP' and instrument_class == 'ADCP' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSBP/LJ01C/05-ADCPSI103/streamed/adcp_velocity_beam'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CE02SHBP' and node == 'BEP' and instrument_class == 'VEL3D' and method == 'Streamed':
	    uframe_dataset_name = 'CE02SHBP/LJ01D/07-VEL3DC108/streamed/vel3d_cd_velocity_data'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
	elif platform_name == 'CE04OSBP' and node == 'BEP' and instrument_class == 'VEL3D' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSBP/LJ01C/07-VEL3DC107/streamed/vel3d_cd_velocity_data'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_c_eastward_turbulent_velocity'
	    var_list[2].name = 'vel3d_c_northward_turbulent_velocity'
	    var_list[3].name = 'vel3d_c_upward_turbulent_velocity'
	    var_list[4].name = 'seawater_pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = '0.001dbar'
	elif platform_name == 'CE02SHBP' and node == 'BEP' and instrument_class == 'OPTAA' and method == 'Streamed':
	    uframe_dataset_name = 'CE02SHBP/LJ01D/08-OPTAAD106/streamed/optaa_sample'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CE04OSBP' and node == 'BEP' and instrument_class == 'OPTAA' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSBP/LJ01C/08-OPTAAC104/streamed/optaa_sample'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
    #CSPP Data below
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSP/SP001/08-FLORTJ000/telemetered/flort_dj_cspp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE01ISSP/SP001/08-FLORTJ000/recovered_cspp/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSP/SP001/08-FLORTJ000/telemetered/flort_dj_cspp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE06ISSP/SP001/08-FLORTJ000/recovered_cspp/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSP/SP001/02-DOSTAJ000/telemetered/dosta_abcdjm_cspp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[4].name = 'optode_temperature'
	    var_list[5].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'umol/L'
	    var_list[4].units = 'degC'
	    var_list[5].units = 'dbar'
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE01ISSP/SP001/02-DOSTAJ000/recovered_cspp/dosta_abcdjm_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[4].name = 'optode_temperature'
	    var_list[5].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'umol/L'
	    var_list[4].units = 'degC'
	    var_list[5].units = 'dbar'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSP/SP001/02-DOSTAJ000/telemetered/dosta_abcdjm_cspp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[4].name = 'optode_temperature'
	    var_list[5].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'umol/L'
	    var_list[4].units = 'degC'
	    var_list[5].units = 'dbar'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE06ISSP/SP001/02-DOSTAJ000/recovered_cspp/dosta_abcdjm_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[4].name = 'optode_temperature'
	    var_list[5].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'umol/L'
	    var_list[4].units = 'degC'
	    var_list[5].units = 'dbar'
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSP/SP001/09-CTDPFJ000/telemetered/ctdpf_j_cspp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temperature'
	    var_list[2].name = 'salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE01ISSP/SP001/09-CTDPFJ000/recovered_cspp/ctdpf_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temperature'
	    var_list[2].name = 'salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSP/SP001/09-CTDPFJ000/telemetered/ctdpf_j_cspp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temperature'
	    var_list[2].name = 'salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE06ISSP/SP001/09-CTDPFJ000/recovered_cspp/ctdpf_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temperature'
	    var_list[2].name = 'salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSP/SP001/10-PARADJ000/telemetered/parad_j_cspp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_j_par_counts_output'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE01ISSP/SP001/10-PARADJ000/recovered_cspp/parad_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_j_par_counts_output'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSP/SP001/10-PARADJ000/telemetered/parad_j_cspp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_j_par_counts_output'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE06ISSP/SP001/10-PARADJ000/recovered_cspp/parad_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_j_par_counts_output'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'NUTNR' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE01ISSP/SP001/06-NUTNRJ000/recovered_cspp/nutnr_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'salinity_corrected_nitrate'
	    var_list[2].name = 'nitrate_concentration'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'NUTNR' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE06ISSP/SP001/06-NUTNRJ000/recovered_cspp/nutnr_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'salinity_corrected_nitrate'
	    var_list[2].name = 'nitrate_concentration'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'SPKIR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSP/SP001/07-SPKIRJ000/telemetered/spkir_abj_cspp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'SPKIR' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE01ISSP/SP001/07-SPKIRJ000/recovered_cspp/spkir_abj_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'SPKIR' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSP/SP001/07-SPKIRJ000/telemetered/spkir_abj_cspp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'SPKIR' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE06ISSP/SP001/07-SPKIRJ000/recovered_cspp/spkir_abj_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE01ISSP/SP001/05-VELPTJ000/telemetered/velpt_j_cspp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'velpt_j_eastward_velocity'
	    var_list[2].name = 'velpt_j_northward_velocity'
	    var_list[3].name = 'velpt_j_upward_velocity'
	    var_list[4].name = 'heading'
	    var_list[5].name = 'roll'
	    var_list[6].name = 'pitch'
	    var_list[7].name = 'temperature'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'degrees'
	    var_list[5].units = 'degrees'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degC'
	    var_list[8].units = 'dbar'
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'VELPT' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE01ISSP/SP001/05-VELPTJ000/recovered_cspp/velpt_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'velpt_j_eastward_velocity'
	    var_list[2].name = 'velpt_j_northward_velocity'
	    var_list[3].name = 'velpt_j_upward_velocity'
	    var_list[4].name = 'heading'
	    var_list[5].name = 'roll'
	    var_list[6].name = 'pitch'
	    var_list[7].name = 'temperature'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'degrees'
	    var_list[5].units = 'degrees'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degC'
	    var_list[8].units = 'dbar'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE06ISSP/SP001/05-VELPTJ000/telemetered/velpt_j_cspp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'velpt_j_eastward_velocity'
	    var_list[2].name = 'velpt_j_northward_velocity'
	    var_list[3].name = 'velpt_j_upward_velocity'
	    var_list[4].name = 'heading'
	    var_list[5].name = 'roll'
	    var_list[6].name = 'pitch'
	    var_list[7].name = 'temperature'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'degrees'
	    var_list[5].units = 'degrees'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degC'
	    var_list[8].units = 'dbar'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'VELPT' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE06ISSP/SP001/05-VELPTJ000/recovered_cspp/velpt_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'velpt_j_eastward_velocity'
	    var_list[2].name = 'velpt_j_northward_velocity'
	    var_list[3].name = 'velpt_j_upward_velocity'
	    var_list[4].name = 'heading'
	    var_list[5].name = 'roll'
	    var_list[6].name = 'pitch'
	    var_list[7].name = 'temperature'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'degrees'
	    var_list[5].units = 'degrees'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degC'
	    var_list[8].units = 'dbar'
	elif platform_name == 'CE01ISSP' and node == 'PROFILER' and instrument_class == 'OPTAA' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE01ISSP/SP001/04-OPTAAJ000/recovered_cspp/optaa_dj_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	elif platform_name == 'CE06ISSP' and node == 'PROFILER' and instrument_class == 'OPTAA' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE06ISSP/SP001/04-OPTAAJ000/recovered_cspp/optaa_dj_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	elif platform_name == 'CE02SHSP' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE02SHSP/SP001/07-FLORTJ000/recovered_cspp/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CE07SHSP' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE07SHSP/SP001/07-FLORTJ000/recovered_cspp/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CE02SHSP' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE02SHSP/SP001/01-DOSTAJ000/recovered_cspp/dosta_abcdjm_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[4].name = 'optode_temperature'
	    var_list[5].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'umol/L'
	    var_list[4].units = 'degC'
	    var_list[5].units = 'dbar'
	elif platform_name == 'CE07SHSP' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE07SHSP/SP001/01-DOSTAJ000/recovered_cspp/dosta_abcdjm_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[4].name = 'optode_temperature'
	    var_list[5].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'umol/L'
	    var_list[4].units = 'degC'
	    var_list[5].units = 'dbar'
	elif platform_name == 'CE02SHSP' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE02SHSP/SP001/08-CTDPFJ000/recovered_cspp/ctdpf_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temperature'
	    var_list[2].name = 'salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE07SHSP' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE07SHSP/SP001/08-CTDPFJ000/recovered_cspp/ctdpf_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temperature'
	    var_list[2].name = 'salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE02SHSP' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE02SHSP/SP001/09-PARADJ000/recovered_cspp/parad_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_j_par_counts_output'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE07SHSP' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE07SHSP/SP001/09-PARADJ000/recovered_cspp/parad_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_j_par_counts_output'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE02SHSP' and node == 'PROFILER' and instrument_class == 'NUTNR' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE02SHSP/SP001/05-NUTNRJ000/recovered_cspp/nutnr_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'salinity_corrected_nitrate'
	    var_list[2].name = 'nitrate_concentration'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CE07SHSP' and node == 'PROFILER' and instrument_class == 'NUTNR' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE07SHSP/SP001/05-NUTNRJ000/recovered_cspp/nutnr_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'salinity_corrected_nitrate'
	    var_list[2].name = 'nitrate_concentration'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CE02SHSP' and node == 'PROFILER' and instrument_class == 'SPKIR' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE02SHSP/SP001/06-SPKIRJ000/recovered_cspp/spkir_abj_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE07SHSP' and node == 'PROFILER' and instrument_class == 'SPKIR' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE07SHSP/SP001/06-SPKIRJ000/recovered_cspp/spkir_abj_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE02SHSP' and node == 'PROFILER' and instrument_class == 'VELPT' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE02SHSP/SP001/02-VELPTJ000/recovered_cspp/velpt_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'velpt_j_eastward_velocity'
	    var_list[2].name = 'velpt_j_northward_velocity'
	    var_list[3].name = 'velpt_j_upward_velocity'
	    var_list[4].name = 'heading'
	    var_list[5].name = 'roll'
	    var_list[6].name = 'pitch'
	    var_list[7].name = 'temperature'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'degrees'
	    var_list[5].units = 'degrees'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degC'
	    var_list[8].units = 'dbar'
	elif platform_name == 'CE07SHSP' and node == 'PROFILER' and instrument_class == 'VELPT' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE07SHSP/SP001/02-VELPTJ000/recovered_cspp/velpt_j_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'velpt_j_eastward_velocity'
	    var_list[2].name = 'velpt_j_northward_velocity'
	    var_list[3].name = 'velpt_j_upward_velocity'
	    var_list[4].name = 'heading'
	    var_list[5].name = 'roll'
	    var_list[6].name = 'pitch'
	    var_list[7].name = 'temperature'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'degrees'
	    var_list[5].units = 'degrees'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degC'
	    var_list[8].units = 'dbar'
	elif platform_name == 'CE02SHSP' and node == 'PROFILER' and instrument_class == 'OPTAA' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE02SHSP/SP001/04-OPTAAJ000/recovered_cspp/optaa_dj_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	elif platform_name == 'CE07SHSP' and node == 'PROFILER' and instrument_class == 'OPTAA' and method == 'RecoveredCSPP':
	    uframe_dataset_name = 'CE07SHSP/SP001/04-OPTAAJ000/recovered_cspp/optaa_dj_cspp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	elif platform_name == 'CEGL386' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL386/05-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL386' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL386/05-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL384' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL384/05-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL384' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL384/05-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL383' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL383/05-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL383' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL383/05-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL382' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL382/05-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL382' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL382/05-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL381' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL381/05-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL381' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL381/05-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL327' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL327/05-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL327' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL327/05-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL326' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL326/05-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL326' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL326/05-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL320' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL320/05-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL320' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL320/05-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL319' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL319/05-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL319' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL319/05-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL312' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL312/05-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL312' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL312/05-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL311' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL311/05-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL311' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL311/05-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL247' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL247/05-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL247' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL247/05-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CEGL386' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL386/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL386' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL386/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL384' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL384/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL384' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL384/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL383' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL383/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL383' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL383/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL382' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL382/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL382' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL382/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL381' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL381/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL381' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL381/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL327' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL327/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL327' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL327/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL326' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL326/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL326' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL326/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL320' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL320/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL320' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL320/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL319' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL319/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL319' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL319/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL312' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL312/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL312' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL312/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL311' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL311/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL311' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL311/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL247' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL247/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL247' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL247/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CEGL386' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL386/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL386' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL386/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL384' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL384/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL384' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL384/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL383' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL383/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL383' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL383/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL382' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL382/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL382' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL382/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL381' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL381/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL381' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL381/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL327' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL327/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL327' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL327/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL326' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL326/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL326' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL326/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL320' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL320/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL320' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL320/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL319' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL319/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL319' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL319/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL312' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL312/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL312' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL312/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL311' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL311/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL311' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL311/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL247' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL247/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL247' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL247/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CEGL386' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL386/01-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL386' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL386/01-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL384' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL384/01-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL384' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL384/01-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL383' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL383/01-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL383' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL383/01-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL382' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL382/01-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL382' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL382/01-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL381' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL381/01-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL381' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL381/01-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL327' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL327/01-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL327' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL327/01-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL326' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL326/01-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL326' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL326/01-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL320' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL320/01-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL320' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL320/01-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL319' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL319/01-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL319' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL319/01-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL312' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL312/01-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL312' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL312/01-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL311' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL311/01-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL311' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL311/01-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL247' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CE05MOAS/GL247/01-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL247' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL247/01-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CEGL386' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL386/03-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CEGL384' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL384/03-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CEGL383' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL383/03-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CEGL382' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL382/03-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CEGL381' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL381/03-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CEGL327' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL327/03-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CEGL326' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL326/03-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CEGL320' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL320/03-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CEGL319' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL319/03-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CEGL312' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL312/03-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CEGL311' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL311/03-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CEGL247' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE05MOAS/GL247/03-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/SBD11/06-METBKA000/telemetered/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/SBD11/06-METBKA000/recovered_host/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/SBD11/06-METBKA000/telemetered/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/SBD11/06-METBKA000/recovered_host/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/SBD11/06-METBKA000/telemetered/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/SBD11/06-METBKA000/recovered_host/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/SBD11/06-METBKA000/telemetered/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/SBD11/06-METBKA000/recovered_host/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_MeanDir' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_mean_directional'
	    var_list[0].name = 'time'
	    var_list[1].name = 'mean_direction'
	    var_list[2].name = 'number_bands'
	    var_list[3].name = 'initial_frequency'
	    var_list[4].name = 'frequency_spacing'
	    var_list[5].name = 'psd_mean_directional'
	    var_list[6].name = 'mean_direction_array'
	    var_list[7].name = 'directional_spread_array'
	    var_list[8].name = 'spread_direction'
	    var_list[9].name = 'wavss_a_directional_frequency'
	    var_list[10].name = 'wavss_a_corrected_mean_wave_direction'
	    var_list[11].name = 'wavss_a_corrected_directional_wave_direction'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degrees'
	    var_list[2].units = '1'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'Hz'
	    var_list[5].units = 'm2 Hz-1'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degrees'
	    var_list[8].units = 'degrees'
	    var_list[9].units = 'Hz'
	    var_list[10].units = 'deg'
	    var_list[11].units = 'deg'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_MeanDir' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_mean_directional_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'mean_direction'
	    var_list[2].name = 'number_bands'
	    var_list[3].name = 'initial_frequency'
	    var_list[4].name = 'frequency_spacing'
	    var_list[5].name = 'psd_mean_directional'
	    var_list[6].name = 'mean_direction_array'
	    var_list[7].name = 'directional_spread_array'
	    var_list[8].name = 'spread_direction'
	    var_list[9].name = 'wavss_a_directional_frequency'
	    var_list[10].name = 'wavss_a_corrected_mean_wave_direction'
	    var_list[11].name = 'wavss_a_corrected_directional_wave_direction'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degrees'
	    var_list[2].units = '1'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'Hz'
	    var_list[5].units = 'm2 Hz-1'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degrees'
	    var_list[8].units = 'degrees'
	    var_list[9].units = 'Hz'
	    var_list[10].units = 'deg'
	    var_list[11].units = 'deg'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_MeanDir' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_mean_directional'
	    var_list[0].name = 'time'
	    var_list[1].name = 'mean_direction'
	    var_list[2].name = 'number_bands'
	    var_list[3].name = 'initial_frequency'
	    var_list[4].name = 'frequency_spacing'
	    var_list[5].name = 'psd_mean_directional'
	    var_list[6].name = 'mean_direction_array'
	    var_list[7].name = 'directional_spread_array'
	    var_list[8].name = 'spread_direction'
	    var_list[9].name = 'wavss_a_directional_frequency'
	    var_list[10].name = 'wavss_a_corrected_mean_wave_direction'
	    var_list[11].name = 'wavss_a_corrected_directional_wave_direction'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degrees'
	    var_list[2].units = '1'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'Hz'
	    var_list[5].units = 'm2 Hz-1'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degrees'
	    var_list[8].units = 'degrees'
	    var_list[9].units = 'Hz'
	    var_list[10].units = 'deg'
	    var_list[11].units = 'deg'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_MeanDir' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_mean_directional_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'mean_direction'
	    var_list[2].name = 'number_bands'
	    var_list[3].name = 'initial_frequency'
	    var_list[4].name = 'frequency_spacing'
	    var_list[5].name = 'psd_mean_directional'
	    var_list[6].name = 'mean_direction_array'
	    var_list[7].name = 'directional_spread_array'
	    var_list[8].name = 'spread_direction'
	    var_list[9].name = 'wavss_a_directional_frequency'
	    var_list[10].name = 'wavss_a_corrected_mean_wave_direction'
	    var_list[11].name = 'wavss_a_corrected_directional_wave_direction'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degrees'
	    var_list[2].units = '1'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'Hz'
	    var_list[5].units = 'm2 Hz-1'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degrees'
	    var_list[8].units = 'degrees'
	    var_list[9].units = 'Hz'
	    var_list[10].units = 'deg'
	    var_list[11].units = 'deg'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_MeanDir' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_mean_directional'
	    var_list[0].name = 'time'
	    var_list[1].name = 'mean_direction'
	    var_list[2].name = 'number_bands'
	    var_list[3].name = 'initial_frequency'
	    var_list[4].name = 'frequency_spacing'
	    var_list[5].name = 'psd_mean_directional'
	    var_list[6].name = 'mean_direction_array'
	    var_list[7].name = 'directional_spread_array'
	    var_list[8].name = 'spread_direction'
	    var_list[9].name = 'wavss_a_directional_frequency'
	    var_list[10].name = 'wavss_a_corrected_mean_wave_direction'
	    var_list[11].name = 'wavss_a_corrected_directional_wave_direction'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degrees'
	    var_list[2].units = '1'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'Hz'
	    var_list[5].units = 'm2 Hz-1'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degrees'
	    var_list[8].units = 'degrees'
	    var_list[9].units = 'Hz'
	    var_list[10].units = 'deg'
	    var_list[11].units = 'deg'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_MeanDir' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_mean_directional_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'mean_direction'
	    var_list[2].name = 'number_bands'
	    var_list[3].name = 'initial_frequency'
	    var_list[4].name = 'frequency_spacing'
	    var_list[5].name = 'psd_mean_directional'
	    var_list[6].name = 'mean_direction_array'
	    var_list[7].name = 'directional_spread_array'
	    var_list[8].name = 'spread_direction'
	    var_list[9].name = 'wavss_a_directional_frequency'
	    var_list[10].name = 'wavss_a_corrected_mean_wave_direction'
	    var_list[11].name = 'wavss_a_corrected_directional_wave_direction'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degrees'
	    var_list[2].units = '1'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'Hz'
	    var_list[5].units = 'm2 Hz-1'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degrees'
	    var_list[8].units = 'degrees'
	    var_list[9].units = 'Hz'
	    var_list[10].units = 'deg'
	    var_list[11].units = 'deg'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_MeanDir' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_mean_directional'
	    var_list[0].name = 'time'
	    var_list[1].name = 'mean_direction'
	    var_list[2].name = 'number_bands'
	    var_list[3].name = 'initial_frequency'
	    var_list[4].name = 'frequency_spacing'
	    var_list[5].name = 'psd_mean_directional'
	    var_list[6].name = 'mean_direction_array'
	    var_list[7].name = 'directional_spread_array'
	    var_list[8].name = 'spread_direction'
	    var_list[9].name = 'wavss_a_directional_frequency'
	    var_list[10].name = 'wavss_a_corrected_mean_wave_direction'
	    var_list[11].name = 'wavss_a_corrected_directional_wave_direction'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degrees'
	    var_list[2].units = '1'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'Hz'
	    var_list[5].units = 'm2 Hz-1'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degrees'
	    var_list[8].units = 'degrees'
	    var_list[9].units = 'Hz'
	    var_list[10].units = 'deg'
	    var_list[11].units = 'deg'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_MeanDir' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_mean_directional_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'mean_direction'
	    var_list[2].name = 'number_bands'
	    var_list[3].name = 'initial_frequency'
	    var_list[4].name = 'frequency_spacing'
	    var_list[5].name = 'psd_mean_directional'
	    var_list[6].name = 'mean_direction_array'
	    var_list[7].name = 'directional_spread_array'
	    var_list[8].name = 'spread_direction'
	    var_list[9].name = 'wavss_a_directional_frequency'
	    var_list[10].name = 'wavss_a_corrected_mean_wave_direction'
	    var_list[11].name = 'wavss_a_corrected_directional_wave_direction'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degrees'
	    var_list[2].units = '1'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'Hz'
	    var_list[5].units = 'm2 Hz-1'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degrees'
	    var_list[8].units = 'degrees'
	    var_list[9].units = 'Hz'
	    var_list[10].units = 'deg'
	    var_list[11].units = 'deg'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_NonDir' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_non_directional'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'psd_non_directional'
	    var_list[5].name = 'wavss_a_non_directional_frequency'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'm2 Hz-1'
	    var_list[5].units = 'Hz'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_NonDir' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_non_directional_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'psd_non_directional'
	    var_list[5].name = 'wavss_a_non_directional_frequency'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'm2 Hz-1'
	    var_list[5].units = 'Hz'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_NonDir' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_non_directional'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'psd_non_directional'
	    var_list[5].name = 'wavss_a_non_directional_frequency'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'm2 Hz-1'
	    var_list[5].units = 'Hz'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_NonDir' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_non_directional_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'psd_non_directional'
	    var_list[5].name = 'wavss_a_non_directional_frequency'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'm2 Hz-1'
	    var_list[5].units = 'Hz'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_NonDir' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_non_directional'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'psd_non_directional'
	    var_list[5].name = 'wavss_a_non_directional_frequency'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'm2 Hz-1'
	    var_list[5].units = 'Hz'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_NonDir' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_non_directional_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'psd_non_directional'
	    var_list[5].name = 'wavss_a_non_directional_frequency'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'm2 Hz-1'
	    var_list[5].units = 'Hz'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_NonDir' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_non_directional'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'psd_non_directional'
	    var_list[5].name = 'wavss_a_non_directional_frequency'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'm2 Hz-1'
	    var_list[5].units = 'Hz'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_NonDir' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_non_directional_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'psd_non_directional'
	    var_list[5].name = 'wavss_a_non_directional_frequency'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'm2 Hz-1'
	    var_list[5].units = 'Hz'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_Motion' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_motion'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_time_samples'
	    var_list[2].name = 'initial_time'
	    var_list[3].name = 'time_spacing'
	    var_list[4].name = 'solution_found'
	    var_list[5].name = 'heave_offset_array'
	    var_list[6].name = 'north_offset_array'
	    var_list[7].name = 'east_offset_array'
	    var_list[8].name = 'wavss_a_buoymotion_time'
	    var_list[9].name = 'wavss_a_magcor_buoymotion_x'
	    var_list[10].name = 'wavss_a_magcor_buoymotion_y'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'sec'
	    var_list[3].units = 'sec'
	    var_list[4].units = '1'
	    var_list[5].units = 'm'
	    var_list[6].units = 'm'
	    var_list[7].units = 'm'
	    var_list[8].units = 'seconds since 1900-01-01'
	    var_list[9].units = 'm'
	    var_list[10].units = 'm'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_Motion' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_motion_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_time_samples'
	    var_list[2].name = 'initial_time'
	    var_list[3].name = 'time_spacing'
	    var_list[4].name = 'solution_found'
	    var_list[5].name = 'heave_offset_array'
	    var_list[6].name = 'north_offset_array'
	    var_list[7].name = 'east_offset_array'
	    var_list[8].name = 'wavss_a_buoymotion_time'
	    var_list[9].name = 'wavss_a_magcor_buoymotion_x'
	    var_list[10].name = 'wavss_a_magcor_buoymotion_y'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'sec'
	    var_list[3].units = 'sec'
	    var_list[4].units = '1'
	    var_list[5].units = 'm'
	    var_list[6].units = 'm'
	    var_list[7].units = 'm'
	    var_list[8].units = 'seconds since 1900-01-01'
	    var_list[9].units = 'm'
	    var_list[10].units = 'm'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_Motion' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_motion'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_time_samples'
	    var_list[2].name = 'initial_time'
	    var_list[3].name = 'time_spacing'
	    var_list[4].name = 'solution_found'
	    var_list[5].name = 'heave_offset_array'
	    var_list[6].name = 'north_offset_array'
	    var_list[7].name = 'east_offset_array'
	    var_list[8].name = 'wavss_a_buoymotion_time'
	    var_list[9].name = 'wavss_a_magcor_buoymotion_x'
	    var_list[10].name = 'wavss_a_magcor_buoymotion_y'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'sec'
	    var_list[3].units = 'sec'
	    var_list[4].units = '1'
	    var_list[5].units = 'm'
	    var_list[6].units = 'm'
	    var_list[7].units = 'm'
	    var_list[8].units = 'seconds since 1900-01-01'
	    var_list[9].units = 'm'
	    var_list[10].units = 'm'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_Motion' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_motion_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_time_samples'
	    var_list[2].name = 'initial_time'
	    var_list[3].name = 'time_spacing'
	    var_list[4].name = 'solution_found'
	    var_list[5].name = 'heave_offset_array'
	    var_list[6].name = 'north_offset_array'
	    var_list[7].name = 'east_offset_array'
	    var_list[8].name = 'wavss_a_buoymotion_time'
	    var_list[9].name = 'wavss_a_magcor_buoymotion_x'
	    var_list[10].name = 'wavss_a_magcor_buoymotion_y'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'sec'
	    var_list[3].units = 'sec'
	    var_list[4].units = '1'
	    var_list[5].units = 'm'
	    var_list[6].units = 'm'
	    var_list[7].units = 'm'
	    var_list[8].units = 'seconds since 1900-01-01'
	    var_list[9].units = 'm'
	    var_list[10].units = 'm'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_Motion' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_motion'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_time_samples'
	    var_list[2].name = 'initial_time'
	    var_list[3].name = 'time_spacing'
	    var_list[4].name = 'solution_found'
	    var_list[5].name = 'heave_offset_array'
	    var_list[6].name = 'north_offset_array'
	    var_list[7].name = 'east_offset_array'
	    var_list[8].name = 'wavss_a_buoymotion_time'
	    var_list[9].name = 'wavss_a_magcor_buoymotion_x'
	    var_list[10].name = 'wavss_a_magcor_buoymotion_y'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'sec'
	    var_list[3].units = 'sec'
	    var_list[4].units = '1'
	    var_list[5].units = 'm'
	    var_list[6].units = 'm'
	    var_list[7].units = 'm'
	    var_list[8].units = 'seconds since 1900-01-01'
	    var_list[9].units = 'm'
	    var_list[10].units = 'm'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_Motion' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_motion_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_time_samples'
	    var_list[2].name = 'initial_time'
	    var_list[3].name = 'time_spacing'
	    var_list[4].name = 'solution_found'
	    var_list[5].name = 'heave_offset_array'
	    var_list[6].name = 'north_offset_array'
	    var_list[7].name = 'east_offset_array'
	    var_list[8].name = 'wavss_a_buoymotion_time'
	    var_list[9].name = 'wavss_a_magcor_buoymotion_x'
	    var_list[10].name = 'wavss_a_magcor_buoymotion_y'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'sec'
	    var_list[3].units = 'sec'
	    var_list[4].units = '1'
	    var_list[5].units = 'm'
	    var_list[6].units = 'm'
	    var_list[7].units = 'm'
	    var_list[8].units = 'seconds since 1900-01-01'
	    var_list[9].units = 'm'
	    var_list[10].units = 'm'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_Motion' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_motion'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_time_samples'
	    var_list[2].name = 'initial_time'
	    var_list[3].name = 'time_spacing'
	    var_list[4].name = 'solution_found'
	    var_list[5].name = 'heave_offset_array'
	    var_list[6].name = 'north_offset_array'
	    var_list[7].name = 'east_offset_array'
	    var_list[8].name = 'wavss_a_buoymotion_time'
	    var_list[9].name = 'wavss_a_magcor_buoymotion_x'
	    var_list[10].name = 'wavss_a_magcor_buoymotion_y'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'sec'
	    var_list[3].units = 'sec'
	    var_list[4].units = '1'
	    var_list[5].units = 'm'
	    var_list[6].units = 'm'
	    var_list[7].units = 'm'
	    var_list[8].units = 'seconds since 1900-01-01'
	    var_list[9].units = 'm'
	    var_list[10].units = 'm'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_Motion' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_motion_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_time_samples'
	    var_list[2].name = 'initial_time'
	    var_list[3].name = 'time_spacing'
	    var_list[4].name = 'solution_found'
	    var_list[5].name = 'heave_offset_array'
	    var_list[6].name = 'north_offset_array'
	    var_list[7].name = 'east_offset_array'
	    var_list[8].name = 'wavss_a_buoymotion_time'
	    var_list[9].name = 'wavss_a_magcor_buoymotion_x'
	    var_list[10].name = 'wavss_a_magcor_buoymotion_y'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'sec'
	    var_list[3].units = 'sec'
	    var_list[4].units = '1'
	    var_list[5].units = 'm'
	    var_list[6].units = 'm'
	    var_list[7].units = 'm'
	    var_list[8].units = 'seconds since 1900-01-01'
	    var_list[9].units = 'm'
	    var_list[10].units = 'm'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_Fourier' and method == 'Telemetered':
	    uframe_dataset_name = 'CE02SHSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_fourier'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'number_directional_bands'
	    var_list[5].name = 'initial_directional_frequency'
	    var_list[6].name = 'directional_frequency_spacing'
	    var_list[7].name = 'fourier_coefficient_2d_array'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = '1'
	    var_list[5].units = 'Hz'
	    var_list[6].units = 'Hz'
	    var_list[7].units = '1'
	elif platform_name == 'CE02SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_Fourier' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE02SHSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_fourier_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'number_directional_bands'
	    var_list[5].name = 'initial_directional_frequency'
	    var_list[6].name = 'directional_frequency_spacing'
	    var_list[7].name = 'fourier_coefficient_2d_array'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = '1'
	    var_list[5].units = 'Hz'
	    var_list[6].units = 'Hz'
	    var_list[7].units = '1'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_Fourier' and method == 'Telemetered':
	    uframe_dataset_name = 'CE04OSSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_fourier'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'number_directional_bands'
	    var_list[5].name = 'initial_directional_frequency'
	    var_list[6].name = 'directional_frequency_spacing'
	    var_list[7].name = 'fourier_coefficient_2d_array'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = '1'
	    var_list[5].units = 'Hz'
	    var_list[6].units = 'Hz'
	    var_list[7].units = '1'
	elif platform_name == 'CE04OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_Fourier' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE04OSSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_fourier_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'number_directional_bands'
	    var_list[5].name = 'initial_directional_frequency'
	    var_list[6].name = 'directional_frequency_spacing'
	    var_list[7].name = 'fourier_coefficient_2d_array'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = '1'
	    var_list[5].units = 'Hz'
	    var_list[6].units = 'Hz'
	    var_list[7].units = '1'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_Fourier' and method == 'Telemetered':
	    uframe_dataset_name = 'CE09OSSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_fourier'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'number_directional_bands'
	    var_list[5].name = 'initial_directional_frequency'
	    var_list[6].name = 'directional_frequency_spacing'
	    var_list[7].name = 'fourier_coefficient_2d_array'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = '1'
	    var_list[5].units = 'Hz'
	    var_list[6].units = 'Hz'
	    var_list[7].units = '1'
	elif platform_name == 'CE09OSSM' and node == 'BUOY' and instrument_class == 'WAVSS_Fourier' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE09OSSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_fourier_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'number_directional_bands'
	    var_list[5].name = 'initial_directional_frequency'
	    var_list[6].name = 'directional_frequency_spacing'
	    var_list[7].name = 'fourier_coefficient_2d_array'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = '1'
	    var_list[5].units = 'Hz'
	    var_list[6].units = 'Hz'
	    var_list[7].units = '1'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_Fourier' and method == 'Telemetered':
	    uframe_dataset_name = 'CE07SHSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_fourier'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'number_directional_bands'
	    var_list[5].name = 'initial_directional_frequency'
	    var_list[6].name = 'directional_frequency_spacing'
	    var_list[7].name = 'fourier_coefficient_2d_array'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = '1'
	    var_list[5].units = 'Hz'
	    var_list[6].units = 'Hz'
	    var_list[7].units = '1'
	elif platform_name == 'CE07SHSM' and node == 'BUOY' and instrument_class == 'WAVSS_Fourier' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CE07SHSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_fourier_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'number_directional_bands'
	    var_list[5].name = 'initial_directional_frequency'
	    var_list[6].name = 'directional_frequency_spacing'
	    var_list[7].name = 'fourier_coefficient_2d_array'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = '1'
	    var_list[5].units = 'Hz'
	    var_list[6].units = 'Hz'
	    var_list[7].units = '1'
	elif platform_name == 'CE04OSPS' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSPS/SF01B/2A-CTDPFA107/streamed/ctdpf_sbe43_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'seawater_pressure'
	    var_list[5].name = 'seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE04OSPD' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE04OSPD/DP01B/01-CTDPFL105/recovered_inst/dpc_ctd_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'dpc_ctd_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE04OSPD' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CE04OSPD/DP01B/01-CTDPFL105/recovered_wfp/dpc_ctd_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'dpc_ctd_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE04OSPS' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSPS/SF01B/2A-CTDPFA107/streamed/ctdpf_sbe43_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'corrected_dissolved_oxygen'
	    var_list[2].name = 'seawater_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE04OSPD' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE04OSPD/DP01B/06-DOSTAD105/recovered_inst/dpc_optode_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CE04OSPD' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CE04OSPD/DP01B/06-DOSTAD105/recovered_wfp/dpc_optode_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CE04OSPS' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSPS/SF01B/3A-FLORTD104/streamed/flort_d_data_record'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CE04OSPD' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE04OSPD/DP01B/04-FLNTUA103/recovered_inst/dpc_flnturtd_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'flntu_x_mmp_cds_fluorometric_chlorophyll_a'
	    var_list[2].name = 'flntu_x_mmp_cds_total_volume_scattering_coefficient	'
	    var_list[3].name = 'flntu_x_mmp_cds_bback_total'
	    var_list[4].name = 'flcdr_x_mmp_cds_fluorometric_cdom'
	    var_list[5].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'ug/L'
	    var_list[2].units = 'm-1 sr-1'
	    var_list[3].units = 'm-1'
	    var_list[4].units = 'ppb'
	    var_list[5].units = 'dbar'
	elif platform_name == 'CE04OSPD' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CE04OSPD/DP01B/03-FLCDRA103/recovered_wfp/dpc_flcdrtd_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'flntu_x_mmp_cds_fluorometric_chlorophyll_a'
	    var_list[2].name = 'flntu_x_mmp_cds_total_volume_scattering_coefficient	'
	    var_list[3].name = 'flntu_x_mmp_cds_bback_total'
	    var_list[4].name = 'flcdr_x_mmp_cds_fluorometric_cdom'
	    var_list[5].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'ug/L'
	    var_list[2].units = 'm-1 sr-1'
	    var_list[3].units = 'm-1'
	    var_list[4].units = 'ppb'
	    var_list[5].units = 'dbar'
	elif platform_name == 'CE04OSPS' and node == 'PROFILER' and instrument_class == 'PHSEN' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSPS/SF01B/2B-PHSENA108/streamed/phsen_data_record'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'ph_seawater'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CE04OSPS' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSPS/SF01B/3C-PARADA102/streamed/parad_sa_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'par_counts_output'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE04OSPS' and node == 'PROFILER' and instrument_class == 'SPKIR' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSPS/SF01B/3D-SPKIRA102/streamed/spkir_data_record'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_downwelling_vector'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE04OSPS' and node == 'PROFILER' and instrument_class == 'NUTNR' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSPS/SF01B/4A-NUTNRA102/streamed/nutnr_a_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CE04OSPS' and node == 'PROFILER' and instrument_class == 'PCO2W' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSPS/SF01B/4F-PCO2WA102/streamed/pco2w_a_sami_data_record'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CE04OSPS' and node == 'PROFILER' and instrument_class == 'VELPT' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSPS/SF01B/4B-VELPTD106/streamed/velpt_velocity_data'
	    var_list[0].name = 'time'
	    var_list[1].name = 'velpt_d_eastward_velocity'
	    var_list[2].name = 'velpt_d_northward_velocity'
	    var_list[3].name = 'velpt_d_upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[9].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	    var_list[9].units = 'dbar'
	elif platform_name == 'CE04OSPD' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CE04OSPD/DP01B/02-VEL3DA105/recovered_inst/dpc_acm_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_a_eastward_velocity'
	    var_list[2].name = 'vel3d_a_northward_velocity'
	    var_list[3].name = 'vel3d_a_upward_velocity_ascending'
	    var_list[4].name = 'vel3d_a_upward_velocity_descending'
	    var_list[5].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'dbar'
	elif platform_name == 'CE04OSPD' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CE04OSPD/DP01B/02-VEL3DA105/recovered_wfp/dpc_acm_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_a_eastward_velocity'
	    var_list[2].name = 'vel3d_a_northward_velocity'
	    var_list[3].name = 'vel3d_a_upward_velocity_ascending'
	    var_list[4].name = 'vel3d_a_upward_velocity_descending'
	    var_list[5].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'dbar'
	elif platform_name == 'CE04OSPS' and node == 'PLATFORM200M' and instrument_class == 'CTD' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSPS/PC01B/4A-CTDPFA109/streamed/ctdpf_optode_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'seawater_pressure'
	    var_list[5].name = 'seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CE04OSPS' and node == 'PLATFORM200M' and instrument_class == 'DOSTA' and method == 'Streamed':
    #uframe_dataset_name = 'CE04OSPS/PC01B/4A-DOSTAD109/streamed/ctdpf_optode_sample'
	    uframe_dataset_name = 'CE04OSPS/PC01B/4A-CTDPFA109/streamed/ctdpf_optode_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'seawater_pressure'  #also use this for the '4A-DOSTAD109/streamed/ctdpf_optode_sample' stream
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CE04OSPS' and node == 'PLATFORM200M' and instrument_class == 'PHSEN' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSPS/PC01B/4B-PHSENA106/streamed/phsen_data_record'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CE04OSPS' and node == 'PLATFORM200M' and instrument_class == 'PCO2W' and method == 'Streamed':
	    uframe_dataset_name = 'CE04OSPS/PC01B/4D-PCO2WA105/streamed/pco2w_a_sami_data_record'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
#Coastal Pioneer CSM Data Streams
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/SBD11/06-METBKA000/telemetered/metbk_a_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'METBK2' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/SBD12/06-METBKA000/telemetered/metbk_a_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/SBD11/06-METBKA000/recovered_host/metbk_a_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'METBK2' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/SBD12/06-METBKA000/recovered_host/metbk_a_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
	elif platform_name == 'CP03ISSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/SBD11/06-METBKA000/telemetered/metbk_a_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
	elif platform_name == 'CP03ISSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/SBD11/06-METBKA000/recovered_host/metbk_a_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
	elif platform_name == 'CP04OSSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/SBD11/06-METBKA000/telemetered/metbk_a_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
	elif platform_name == 'CP04OSSM' and node == 'BUOY' and instrument_class == 'METBK1' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/SBD11/06-METBKA000/recovered_host/metbk_a_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sea_surface_temperature'
	    var_list[2].name = 'sea_surface_conductivity'
	    var_list[3].name = 'met_salsurf'
	    var_list[4].name = 'met_windavg_mag_corr_east'
	    var_list[5].name = 'met_windavg_mag_corr_north'
	    var_list[6].name = 'barometric_pressure'
	    var_list[7].name = 'air_temperature'
	    var_list[8].name = 'relative_humidity'
	    var_list[9].name = 'longwave_irradiance'
	    var_list[10].name = 'shortwave_irradiance'
	    var_list[11].name = 'precipitation'
	    var_list[12].name = 'met_heatflx_minute'
	    var_list[13].name = 'met_latnflx_minute'
	    var_list[14].name = 'met_netlirr_minute'
	    var_list[15].name = 'met_sensflx_minute'
	    var_list[16].name = 'eastward_velocity'
	    var_list[17].name = 'northward_velocity'
	    var_list[18].name = 'met_spechum'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[17].data = np.array([])
	    var_list[18].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'S/m'
	    var_list[3].units = 'unitless'
	    var_list[4].units = 'm/s'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'mbar'
	    var_list[7].units = 'degC'
	    var_list[8].units = '#'
	    var_list[9].units = 'W/m'
	    var_list[10].units = 'W/m'
	    var_list[11].units = 'mm'
	    var_list[12].units = 'W/m'
	    var_list[13].units = 'W/m'
	    var_list[14].units = 'W/m'
	    var_list[15].units = 'W/m'
	    var_list[16].units = 'm/s'
	    var_list[17].units = 'm/s'
	    var_list[18].units = 'g/kg'
#WAVSS
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'WAVSS_Stats' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_statistics'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_zero_crossings'
	    var_list[2].name = 'average_wave_height'
	    var_list[3].name = 'mean_spectral_period'
	    var_list[4].name = 'max_wave_height'
	    var_list[5].name = 'significant_wave_height'
	    var_list[6].name = 'significant_period'
	    var_list[7].name = 'wave_height_10'
	    var_list[8].name = 'wave_period_10'
	    var_list[9].name = 'mean_wave_period'
	    var_list[10].name = 'peak_wave_period'
	    var_list[11].name = 'wave_period_tp5'
	    var_list[12].name = 'wave_height_hmo'
	    var_list[13].name = 'mean_direction'
	    var_list[14].name = 'mean_spread'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'counts'
	    var_list[2].units = 'm'
	    var_list[3].units = 'sec'
	    var_list[4].units = 'm'
	    var_list[5].units = 'm'
	    var_list[6].units = 'sec'
	    var_list[7].units = 'm'
	    var_list[8].units = 'sec'
	    var_list[9].units = 'sec'
	    var_list[10].units = 'sec'
	    var_list[11].units = 'sec'
	    var_list[12].units = 'm'
	    var_list[13].units = 'degrees'
	    var_list[14].units = 'degrees'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'WAVSS_Stats' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_statistics_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_zero_crossings'
	    var_list[2].name = 'average_wave_height'
	    var_list[3].name = 'mean_spectral_period'
	    var_list[4].name = 'max_wave_height'
	    var_list[5].name = 'significant_wave_height'
	    var_list[6].name = 'significant_period'
	    var_list[7].name = 'wave_height_10'
	    var_list[8].name = 'wave_period_10'
	    var_list[9].name = 'mean_wave_period'
	    var_list[10].name = 'peak_wave_period'
	    var_list[11].name = 'wave_period_tp5'
	    var_list[12].name = 'wave_height_hmo'
	    var_list[13].name = 'mean_direction'
	    var_list[14].name = 'mean_spread'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'counts'
	    var_list[2].units = 'm'
	    var_list[3].units = 'sec'
	    var_list[4].units = 'm'
	    var_list[5].units = 'm'
	    var_list[6].units = 'sec'
	    var_list[7].units = 'm'
	    var_list[8].units = 'sec'
	    var_list[9].units = 'sec'
	    var_list[10].units = 'sec'
	    var_list[11].units = 'sec'
	    var_list[12].units = 'm'
	    var_list[13].units = 'degrees'
	    var_list[14].units = 'degrees'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'WAVSS_MeanDir' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_mean_directional'
	    var_list[0].name = 'time'
	    var_list[1].name = 'mean_direction'
	    var_list[2].name = 'number_bands'
	    var_list[3].name = 'initial_frequency'
	    var_list[4].name = 'frequency_spacing'
	    var_list[5].name = 'psd_mean_directional'
	    var_list[6].name = 'mean_direction_array'
	    var_list[7].name = 'directional_spread_array'
	    var_list[8].name = 'spread_direction'
	    var_list[9].name = 'wavss_a_directional_frequency'
	    var_list[10].name = 'wavss_a_corrected_mean_wave_direction'
	    var_list[11].name = 'wavss_a_corrected_directional_wave_direction'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degrees'
	    var_list[2].units = '1'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'Hz'
	    var_list[5].units = 'm2 Hz-1'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degrees'
	    var_list[8].units = 'degrees'
	    var_list[9].units = 'Hz'
	    var_list[10].units = 'deg'
	    var_list[11].units = 'deg'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'WAVSS_MeanDir' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_mean_directional_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'mean_direction'
	    var_list[2].name = 'number_bands'
	    var_list[3].name = 'initial_frequency'
	    var_list[4].name = 'frequency_spacing'
	    var_list[5].name = 'psd_mean_directional'
	    var_list[6].name = 'mean_direction_array'
	    var_list[7].name = 'directional_spread_array'
	    var_list[8].name = 'spread_direction'
	    var_list[9].name = 'wavss_a_directional_frequency'
	    var_list[10].name = 'wavss_a_corrected_mean_wave_direction'
	    var_list[11].name = 'wavss_a_corrected_directional_wave_direction'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degrees'
	    var_list[2].units = '1'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'Hz'
	    var_list[5].units = 'm2 Hz-1'
	    var_list[6].units = 'degrees'
	    var_list[7].units = 'degrees'
	    var_list[8].units = 'degrees'
	    var_list[9].units = 'Hz'
	    var_list[10].units = 'deg'
	    var_list[11].units = 'deg'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'WAVSS_NonDir' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_non_directional'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'psd_non_directional'
	    var_list[5].name = 'wavss_a_non_directional_frequency'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'm2 Hz-1'
	    var_list[5].units = 'Hz'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'WAVSS_NonDir' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_non_directional_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'psd_non_directional'
	    var_list[5].name = 'wavss_a_non_directional_frequency'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = 'm2 Hz-1'
	    var_list[5].units = 'Hz'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'WAVSS_Motion' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_motion'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_time_samples'
	    var_list[2].name = 'initial_time'
	    var_list[3].name = 'time_spacing'
	    var_list[4].name = 'solution_found'
	    var_list[5].name = 'heave_offset_array'
	    var_list[6].name = 'north_offset_array'
	    var_list[7].name = 'east_offset_array'
	    var_list[8].name = 'wavss_a_buoymotion_time'
	    var_list[9].name = 'wavss_a_magcor_buoymotion_x'
	    var_list[10].name = 'wavss_a_magcor_buoymotion_y'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'sec'
	    var_list[3].units = 'sec'
	    var_list[4].units = '1'
	    var_list[5].units = 'm'
	    var_list[6].units = 'm'
	    var_list[7].units = 'm'
	    var_list[8].units = 'seconds since 1900-01-01'
	    var_list[9].units = 'm'
	    var_list[10].units = 'm'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'WAVSS_Motion' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_motion_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_time_samples'
	    var_list[2].name = 'initial_time'
	    var_list[3].name = 'time_spacing'
	    var_list[4].name = 'solution_found'
	    var_list[5].name = 'heave_offset_array'
	    var_list[6].name = 'north_offset_array'
	    var_list[7].name = 'east_offset_array'
	    var_list[8].name = 'wavss_a_buoymotion_time'
	    var_list[9].name = 'wavss_a_magcor_buoymotion_x'
	    var_list[10].name = 'wavss_a_magcor_buoymotion_y'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'sec'
	    var_list[3].units = 'sec'
	    var_list[4].units = '1'
	    var_list[5].units = 'm'
	    var_list[6].units = 'm'
	    var_list[7].units = 'm'
	    var_list[8].units = 'seconds since 1900-01-01'
	    var_list[9].units = 'm'
	    var_list[10].units = 'm'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'WAVSS_Fourier' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/SBD12/05-WAVSSA000/telemetered/wavss_a_dcl_fourier'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'number_directional_bands'
	    var_list[5].name = 'initial_directional_frequency'
	    var_list[6].name = 'directional_frequency_spacing'
	    var_list[7].name = 'fourier_coefficient_2d_array'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = '1'
	    var_list[5].units = 'Hz'
	    var_list[6].units = 'Hz'
	    var_list[7].units = '1'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'WAVSS_Fourier' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/SBD12/05-WAVSSA000/recovered_host/wavss_a_dcl_fourier_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'number_bands'
	    var_list[2].name = 'initial_frequency'
	    var_list[3].name = 'frequency_spacing'
	    var_list[4].name = 'number_directional_bands'
	    var_list[5].name = 'initial_directional_frequency'
	    var_list[6].name = 'directional_frequency_spacing'
	    var_list[7].name = 'fourier_coefficient_2d_array'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = '1'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'Hz'
	    var_list[4].units = '1'
	    var_list[5].units = 'Hz'
	    var_list[6].units = 'Hz'
	    var_list[7].units = '1'
    #PCO2A
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/SBD12/04-PCO2AA000/telemetered/pco2a_a_dcl_instrument_water'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
	elif platform_name == 'CP03ISSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/SBD12/04-PCO2AA000/telemetered/pco2a_a_dcl_instrument_water'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
	elif platform_name == 'CP04OSSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/SBD12/04-PCO2AA000/telemetered/pco2a_a_dcl_instrument_water'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
    #PCO2A
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/SBD12/04-PCO2AA000/recovered_host/pco2a_a_dcl_instrument_water_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
	elif platform_name == 'CP03ISSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/SBD12/04-PCO2AA000/recovered_host/pco2a_a_dcl_instrument_water_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
	elif platform_name == 'CP04OSSM' and node == 'BUOY' and instrument_class == 'PCO2A' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/SBD12/04-PCO2AA000/recovered_host/pco2a_a_dcl_instrument_water_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'partial_pressure_co2_ssw'
	    var_list[2].name = 'partial_pressure_co2_atm'
	    var_list[3].name = 'pco2_co2flux'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uatm'
	    var_list[2].units = 'uatm'
	    var_list[3].units = 'mol m-2 s-1'
    #FDCHP
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'FDCHP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP01CNSM/SBD12/08-FDCHPA000/recovered_inst/fdchp_a_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'FDCHP' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/SBD12/08-FDCHPA000/telemetered/fdchp_a_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'FDCHP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/SBD12/08-FDCHPA000/recovered_host/fdchp_a_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/SBD11/06-METBKA000/telemetered/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/SBD11/06-METBKA000/recovered_host/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CP03ISSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/SBD11/06-METBKA000/telemetered/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CP03ISSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/SBD11/06-METBKA000/recovered_host/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CP04OSSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/SBD11/06-METBKA000/telemetered/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CP04OSSM' and node == 'BUOY' and instrument_class == 'METBK1-hr' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/SBD11/06-METBKA000/recovered_host/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'METBK2-hr' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/SBD12/06-METBKA000/telemetered/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'METBK2-hr' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/SBD12/06-METBKA000/recovered_host/metbk_hourly'
	    var_list[0].name = 'met_timeflx'
	    var_list[1].name = 'met_rainrte'
	    var_list[2].name = 'met_buoyfls'
	    var_list[3].name = 'met_buoyflx'
	    var_list[4].name = 'met_frshflx'
	    var_list[5].name = 'met_heatflx'
	    var_list[6].name = 'met_latnflx'
	    var_list[7].name = 'met_mommflx'
	    var_list[8].name = 'met_netlirr'
	    var_list[9].name = 'met_rainflx'
	    var_list[10].name = 'met_sensflx'
	    var_list[11].name = 'met_sphum2m'
	    var_list[12].name = 'met_stablty'
	    var_list[13].name = 'met_tempa2m'
	    var_list[14].name = 'met_tempskn'
	    var_list[15].name = 'met_wind10m'
	    var_list[16].name = 'met_netsirr_hourly'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[11].data = np.array([])
	    var_list[12].data = np.array([])
	    var_list[13].data = np.array([])
	    var_list[14].data = np.array([])
	    var_list[15].data = np.array([])
	    var_list[16].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'mm/hr'
	    var_list[2].units = 'W/m2'
	    var_list[3].units = 'W/m2'
	    var_list[4].units = 'mm/hr'
	    var_list[5].units = 'W/m2'
	    var_list[6].units = 'W/m2'
	    var_list[7].units = 'N/m2'
	    var_list[8].units = 'W/m2'
	    var_list[9].units = 'W/m2'
	    var_list[10].units = 'W/m2'
	    var_list[11].units = 'g/kg'
	    var_list[12].units = 'unitless'
	    var_list[13].units = 'degC'
	    var_list[14].units = 'degC'
	    var_list[15].units = 'm/s'
	    var_list[16].units = 'W/m2'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/RID27/03-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/RID27/03-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP01CNSM/RID27/03-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/RID27/03-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/RID27/03-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP03ISSM/RID27/03-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/RID27/03-CTDBPC000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/RID27/03-CTDBPC000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP04OSSM/RID27/03-CTDBPC000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/MFD37/03-CTDBPE000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/MFD37/03-CTDBPE000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP04OSSM/MFD37/03-CTDBPE000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/MFD37/03-CTDBPD000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/MFD37/03-CTDBPD000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP03ISSM/MFD37/03-CTDBPD000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/MFD37/03-CTDBPD000/telemetered/ctdbp_cdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/MFD37/03-CTDBPD000/recovered_host/ctdbp_cdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'pressure'
	    var_list[5].name = 'conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'CTD' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP01CNSM/MFD37/03-CTDBPD000/recovered_inst/ctdbp_cdef_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdbp_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdbp_seawater_pressure'
	    var_list[5].name = 'ctdbp_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/RID27/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/MFD37/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/RID27/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/MFD37/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/RID27/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/MFD37/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/RID27/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/MFD37/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/RID27/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/MFD37/01-OPTAAD000/telemetered/optaa_dj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/RID27/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'OPTAA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/MFD37/01-OPTAAD000/recovered_host/optaa_dj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP01CNSM/RID26/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP03ISSM/RID26/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP04OSSM/RID26/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/RID26/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/RID26/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/RID26/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/RID26/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/RID26/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/RID26/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/RID27/02-FLORTD000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/RID27/02-FLORTD000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/RID27/02-FLORTD000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/RID27/02-FLORTD000/recovered_host/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/RID27/02-FLORTD000/recovered_host/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/RID27/02-FLORTD000/recovered_host/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/RID26/08-SPKIRB000/recovered_host/spkir_abj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/RID26/08-SPKIRB000/recovered_host/spkir_abj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/RID26/08-SPKIRB000/recovered_host/spkir_abj_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/RID26/08-SPKIRB000/telemetered/spkir_abj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/RID26/08-SPKIRB000/telemetered/spkir_abj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'SPKIR' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/RID26/08-SPKIRB000/telemetered/spkir_abj_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'spkir_abj_cspp_downwelling_vector'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'uW cm-2 nm-1'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/RID27/04-DOSTAD000/recovered_host/dosta_abcdjm_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/RID27/04-DOSTAD000/recovered_host/dosta_abcdjm_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/RID27/04-DOSTAD000/recovered_host/dosta_abcdjm_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/RID27/04-DOSTAD000/telemetered/dosta_abcdjm_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/RID27/04-DOSTAD000/telemetered/dosta_abcdjm_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/RID27/04-DOSTAD000/telemetered/dosta_abcdjm_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/RID26/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/RID26/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP01CNSM/RID26/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/RID26/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/RID26/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP03ISSM/RID26/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/RID26/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/RID26/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP04OSSM/RID26/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/MFD35/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/MFD35/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/MFD35/06-PHSEND000/telemetered/phsen_abcdef_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/MFD35/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/MFD35/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/MFD35/06-PHSEND000/recovered_host/phsen_abcdef_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP01CNSM/MFD35/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP03ISSM/MFD35/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'PHSEN' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP04OSSM/MFD35/06-PHSEND000/recovered_inst/phsen_abcdef_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'phsen_thermistor_temperature'
	    var_list[2].name = 'phsen_abcdef_ph_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP01CNSM/MFD35/05-PCO2WB000/recovered_inst/pco2w_abc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/MFD35/05-PCO2WB000/telemetered/pco2w_abc_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/MFD35/05-PCO2WB000/recovered_host/pco2w_abc_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP03ISSM/MFD35/05-PCO2WB000/recovered_inst/pco2w_abc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/MFD35/05-PCO2WB000/telemetered/pco2w_abc_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/MFD35/05-PCO2WB000/recovered_host/pco2w_abc_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP04OSSM/MFD35/05-PCO2WB000/recovered_inst/pco2w_abc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/MFD35/05-PCO2WB000/telemetered/pco2w_abc_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'PCO2W' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/MFD35/05-PCO2WB000/recovered_host/pco2w_abc_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'pco2w_thermistor_temperature'
	    var_list[2].name = 'pco2_seawater'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'uatm'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/MFD35/02-PRESFB000/recovered_host/presf_abc_dcl_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP01CNSM/MFD35/02-PRESFB000/recovered_inst/presf_abc_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'presf_tide_pressure'
	    var_list[2].name = 'presf_tide_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/MFD35/02-PRESFB000/telemetered/presf_abc_dcl_tide_measurement'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/MFD35/02-PRESFB000/recovered_host/presf_abc_dcl_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP03ISSM/MFD35/02-PRESFB000/recovered_inst/presf_abc_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'presf_tide_pressure'
	    var_list[2].name = 'presf_tide_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/MFD35/02-PRESFB000/telemetered/presf_abc_dcl_tide_measurement'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/MFD35/02-PRESFC000/recovered_host/presf_abc_dcl_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP04OSSM/MFD35/02-PRESFC000/recovered_inst/presf_abc_tide_measurement_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'presf_tide_pressure'
	    var_list[2].name = 'presf_tide_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'PRESF' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/MFD35/02-PRESFC000/telemetered/presf_abc_dcl_tide_measurement'
	    var_list[0].name = 'time'
	    var_list[1].name = 'abs_seafloor_pressure'
	    var_list[2].name = 'seawater_temperature'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'dbar'
	    var_list[2].units = 'degC'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP01CNSM/MFD35/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/MFD35/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/MFD35/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP03ISSM/MFD35/04-VELPTA000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/MFD35/04-VELPTA000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/MFD35/04-VELPTA000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'VELPT' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP04OSSM/MFD35/04-VELPTB000/recovered_inst/velpt_ab_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'VELPT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/MFD35/04-VELPTB000/telemetered/velpt_ab_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'VELPT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/MFD35/04-VELPTB000/recovered_host/velpt_ab_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'eastward_velocity'
	    var_list[2].name = 'northward_velocity'
	    var_list[3].name = 'upward_velocity'
	    var_list[4].name = 'heading_decidegree'
	    var_list[5].name = 'roll_decidegree'
	    var_list[6].name = 'pitch_decidegree'
	    var_list[7].name = 'temperature_centidegree'
	    var_list[8].name = 'pressure_mbar'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'deci-degrees'
	    var_list[6].units = 'deci-degrees'
	    var_list[7].units = '0.01degC'
	    var_list[8].units = '0.001dbar'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/MFD37/04-DOSTAD000/telemetered/dosta_abcdjm_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/MFD37/04-DOSTAD000/recovered_host/dosta_abcdjm_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/MFD37/04-DOSTAD000/telemetered/dosta_abcdjm_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/MFD37/04-DOSTAD000/recovered_host/dosta_abcdjm_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/MFD37/04-DOSTAD000/telemetered/dosta_abcdjm_dcl_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/MFD37/04-DOSTAD000/recovered_host/dosta_abcdjm_dcl_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dissolved_oxygen'
	    var_list[2].name = 'estimated_oxygen_concentration'
	    var_list[3].name = 'optode_temperature'
	    var_list[4].name = 'dosta_abcdjm_cspp_tc_oxygen'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'umol/L'
	    var_list[3].units = 'degC'
	    var_list[4].units = 'umol/L'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/MFD37/07-ZPLSCC000/telemetered/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/MFD37/07-ZPLSCC000/telemetered/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/MFD37/07-ZPLSCC000/telemetered/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/MFD37/07-ZPLSCC000/recovered_host/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/MFD37/07-ZPLSCC000/recovered_host/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/MFD37/07-ZPLSCC000/recovered_host/zplsc_c_instrument'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP01CNSM/MFD37/07-ZPLSCC000/recovered_inst/zplsc_echogram_data'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP03ISSM/MFD37/07-ZPLSCC000/recovered_inst/zplsc_echogram_data'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'ZPLSC' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP04OSSM/MFD37/07-ZPLSCC000/recovered_inst/zplsc_echogram_data'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/MFD35/01-ADCPTF000/telemetered/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP01CNSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP01CNSM/MFD35/01-ADCPTF000/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/MFD35/01-ADCPTF000/telemetered/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP03ISSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP03ISSM/MFD35/01-ADCPTF000/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/MFD35/01-ADCPSJ000/telemetered/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP04OSSM' and node == 'MFN' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP04OSSM/MFD35/01-ADCPSJ000/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
#Coastal Pioneer WireFollowing Profilers (WFP
	elif platform_name == 'CP04OSPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSPM/SBS11/02-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSPM/SBS11/02-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSPM' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSPM/WFP01/04-FLORTK000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP04OSPM' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP04OSPM/WFP01/04-FLORTK000/recovered_wfp/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP04OSPM' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSPM/WFP01/02-DOFSTK000/telemetered/dofst_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP04OSPM' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP04OSPM/WFP01/02-DOFSTK000/recovered_wfp/dofst_k_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP04OSPM' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSPM/WFP01/01-VEL3DK000/telemetered/vel3d_k_wfp_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP04OSPM' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP04OSPM/WFP01/01-VEL3DK000/recovered_wfp/vel3d_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP04OSPM' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSPM/WFP01/03-CTDPFK000/telemetered/ctdpf_ckl_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP04OSPM' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP04OSPM/WFP01/03-CTDPFK000/recovered_wfp/ctdpf_ckl_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP04OSPM' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSPM/WFP01/05-PARADK000/telemetered/parad_k__stc_imodem_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP04OSPM' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP04OSPM/WFP01/05-PARADK000/recovered_wfp/parad_k__stc_imodem_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP01CNPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNPM/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNPM/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNPM' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNPM/WFP01/04-FLORTK000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP01CNPM' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP01CNPM/WFP01/04-FLORTK000/recovered_wfp/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP01CNPM' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNPM/WFP01/02-DOFSTK000/telemetered/dofst_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP01CNPM' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP01CNPM/WFP01/02-DOFSTK000/recovered_wfp/dofst_k_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP01CNPM' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNPM/WFP01/01-VEL3DK000/telemetered/vel3d_k_wfp_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP01CNPM' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP01CNPM/WFP01/01-VEL3DK000/recovered_wfp/vel3d_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP01CNPM' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNPM/WFP01/03-CTDPFK000/telemetered/ctdpf_ckl_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP01CNPM' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP01CNPM/WFP01/03-CTDPFK000/recovered_wfp/ctdpf_ckl_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP01CNPM' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNPM/WFP01/05-PARADK000/telemetered/parad_k__stc_imodem_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP01CNPM' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP01CNPM/WFP01/05-PARADK000/recovered_wfp/parad_k__stc_imodem_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP02PMCI' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCI/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMCI' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP02PMCI/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMCI' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCI/WFP01/04-FLORTK000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP02PMCI' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMCI/WFP01/04-FLORTK000/recovered_wfp/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP02PMCI' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCI/WFP01/02-DOFSTK000/telemetered/dofst_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP02PMCI' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMCI/WFP01/02-DOFSTK000/recovered_wfp/dofst_k_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP02PMCI' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCI/WFP01/01-VEL3DK000/telemetered/vel3d_k_wfp_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP02PMCI' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMCI/WFP01/01-VEL3DK000/recovered_wfp/vel3d_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP02PMCI' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCI/WFP01/03-CTDPFK000/telemetered/ctdpf_ckl_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP02PMCI' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMCI/WFP01/03-CTDPFK000/recovered_wfp/ctdpf_ckl_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP02PMCI' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCI/WFP01/05-PARADK000/telemetered/parad_k__stc_imodem_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP02PMCI' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMCI/WFP01/05-PARADK000/recovered_wfp/parad_k__stc_imodem_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP02PMCO' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCO/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMCO' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP02PMCO/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMCO' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCO/WFP01/04-FLORTK000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP02PMCO' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMCO/WFP01/04-FLORTK000/recovered_wfp/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP02PMCO' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCO/WFP01/02-DOFSTK000/telemetered/dofst_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP02PMCO' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMCO/WFP01/02-DOFSTK000/recovered_wfp/dofst_k_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP02PMCO' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCO/WFP01/01-VEL3DK000/telemetered/vel3d_k_wfp_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP02PMCO' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMCO/WFP01/01-VEL3DK000/recovered_wfp/vel3d_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP02PMCO' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCO/WFP01/03-CTDPFK000/telemetered/ctdpf_ckl_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP02PMCO' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMCO/WFP01/03-CTDPFK000/recovered_wfp/ctdpf_ckl_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP02PMCO' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCO/WFP01/05-PARADK000/telemetered/parad_k__stc_imodem_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP02PMCO' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMCO/WFP01/05-PARADK000/recovered_wfp/parad_k__stc_imodem_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP02PMUI' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUI/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMUI' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP02PMUI/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMUI' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUI/WFP01/04-FLORTK000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP02PMUI' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMUI/WFP01/04-FLORTK000/recovered_wfp/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP02PMUI' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUI/WFP01/02-DOFSTK000/telemetered/dofst_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP02PMUI' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMUI/WFP01/02-DOFSTK000/recovered_wfp/dofst_k_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP02PMUI' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUI/WFP01/01-VEL3DK000/telemetered/vel3d_k_wfp_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP02PMUI' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMUI/WFP01/01-VEL3DK000/recovered_wfp/vel3d_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP02PMUI' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUI/WFP01/03-CTDPFK000/telemetered/ctdpf_ckl_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP02PMUI' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMUI/WFP01/03-CTDPFK000/recovered_wfp/ctdpf_ckl_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP02PMUI' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUI/WFP01/05-PARADK000/telemetered/parad_k__stc_imodem_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP02PMUI' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMUI/WFP01/05-PARADK000/recovered_wfp/parad_k__stc_imodem_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP02PMUO' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUO/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMUO' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP02PMUO/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMUO' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUO/WFP01/04-FLORTK000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP02PMUO' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMUO/WFP01/04-FLORTK000/recovered_wfp/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP02PMUO' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUO/WFP01/02-DOFSTK000/telemetered/dofst_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP02PMUO' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMUO/WFP01/02-DOFSTK000/recovered_wfp/dofst_k_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP02PMUO' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUO/WFP01/01-VEL3DK000/telemetered/vel3d_k_wfp_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP02PMUO' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMUO/WFP01/01-VEL3DK000/recovered_wfp/vel3d_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP02PMUO' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUO/WFP01/03-CTDPFK000/telemetered/ctdpf_ckl_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP02PMUO' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMUO/WFP01/03-CTDPFK000/recovered_wfp/ctdpf_ckl_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP02PMUO' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUO/WFP01/05-PARADK000/telemetered/parad_k__stc_imodem_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP02PMUO' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP02PMUO/WFP01/05-PARADK000/recovered_wfp/parad_k__stc_imodem_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP03ISPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISPM/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP03ISPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISPM/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP03ISPM' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISPM/WFP01/04-FLORTK000/telemetered/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP03ISPM' and node == 'PROFILER' and instrument_class == 'FLORT' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP03ISPM/WFP01/04-FLORTK000/recovered_wfp/flort_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'fluorometric_chlorophyll_a'
	    var_list[3].name = 'fluorometric_cdom'
	    var_list[4].name = 'total_volume_scattering_coefficient'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	elif platform_name == 'CP03ISPM' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISPM/WFP01/02-DOFSTK000/telemetered/dofst_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP03ISPM' and node == 'PROFILER' and instrument_class == 'DOSTA' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP03ISPM/WFP01/02-DOFSTK000/recovered_wfp/dofst_k_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'dofst_k_oxygen_l2'
	    var_list[2].name = 'dofst_k_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/kg'
	    var_list[2].units = 'Hz'
	    var_list[3].units = 'dbar'
	elif platform_name == 'CP03ISPM' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISPM/WFP01/01-VEL3DK000/telemetered/vel3d_k_wfp_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP03ISPM' and node == 'PROFILER' and instrument_class == 'VEL3D' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP03ISPM/WFP01/01-VEL3DK000/recovered_wfp/vel3d_k_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'vel3d_k_eastward_velocity'
	    var_list[2].name = 'vel3d_k_northward_velocity'
	    var_list[3].name = 'vel3d_k_upward_velocity'
	    var_list[4].name = 'vel3d_k_heading'
	    var_list[5].name = 'vel3d_k_pitch'
	    var_list[6].name = 'vel3d_k_roll'
	    var_list[7].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm/s'
	    var_list[2].units = 'm/s'
	    var_list[3].units = 'm/s'
	    var_list[4].units = 'ddegrees'
	    var_list[5].units = 'ddegrees'
	    var_list[6].units = 'ddegrees'
	    var_list[7].units = 'dbar'
	elif platform_name == 'CP03ISPM' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISPM/WFP01/03-CTDPFK000/telemetered/ctdpf_ckl_wfp_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP03ISPM' and node == 'PROFILER' and instrument_class == 'CTD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP03ISPM/WFP01/03-CTDPFK000/recovered_wfp/ctdpf_ckl_wfp_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'ctdpf_ckl_seawater_temperature'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'density'
	    var_list[4].name = 'ctdpf_ckl_seawater_pressure'
	    var_list[5].name = 'ctdpf_ckl_seawater_conductivity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	elif platform_name == 'CP03ISPM' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISPM/WFP01/05-PARADK000/telemetered/parad_k__stc_imodem_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP03ISPM' and node == 'PROFILER' and instrument_class == 'PARAD' and method == 'RecoveredWFP':
	    uframe_dataset_name = 'CP03ISPM/WFP01/05-PARADK000/recovered_wfp/parad_k__stc_imodem_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_k_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	elif platform_name == 'CP04OSPM' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP04OSPM/RII01/02-ADCPSL010/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP04OSPM' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSPM/RII01/02-ADCPSL010/recovered_host/adcps_jln_stc_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP04OSPM' and node == 'RISER' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSPM/RII01/02-ADCPSL010/telemetered/adcps_jln_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP01CNPM' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP01CNPM/RII01/02-ADCPTG010/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP01CNPM' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNPM/RII01/02-ADCPTG010/recovered_host/adcps_jln_stc_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP01CNPM' and node == 'RISER' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNPM/RII01/02-ADCPTG010/telemetered/adcps_jln_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP02PMCI' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP02PMCI/RII01/02-ADCPTG010/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP02PMCI' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP02PMCI/RII01/02-ADCPTG010/recovered_host/adcps_jln_stc_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP02PMCI' and node == 'RISER' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCI/RII01/02-ADCPTG010/telemetered/adcps_jln_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP02PMCO' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP02PMCO/RII01/02-ADCPTG010/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP02PMCO' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP02PMCO/RII01/02-ADCPTG010/recovered_host/adcps_jln_stc_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP02PMCO' and node == 'RISER' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCO/RII01/02-ADCPTG010/telemetered/adcps_jln_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP02PMUI' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP02PMUI/RII01/02-ADCPTG010/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP02PMUI' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP02PMUI/RII01/02-ADCPTG010/recovered_host/adcps_jln_stc_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP02PMUI' and node == 'RISER' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUI/RII01/02-ADCPTG010/telemetered/adcps_jln_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP02PMUO' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP02PMUO/RII01/02-ADCPSL010/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP02PMUO' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP02PMUO/RII01/02-ADCPSL010/recovered_host/adcps_jln_stc_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP02PMUO' and node == 'RISER' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUO/RII01/02-ADCPSL010/telemetered/adcps_jln_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP03ISPM' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP03ISPM/RII01/02-ADCPTG010/recovered_inst/adcp_velocity_earth'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP03ISPM' and node == 'RISER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISPM/RII01/02-ADCPTG010/recovered_host/adcps_jln_stc_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CP03ISPM' and node == 'RISER' and instrument_class == 'ADCP' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISPM/RII01/02-ADCPTG010/telemetered/adcps_jln_stc_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'adcps_jln_heading'
	    var_list[3].name = 'adcps_jln_pitch'
	    var_list[4].name = 'adcps_jln_roll'
	    var_list[5].name = 'adcps_jln_eastward_seawater_velocity2'
	    var_list[6].name = 'adcps_jln_northward_seawater_velocity2'
	    var_list[7].name = 'adcps_jln_upward_seawater_velocity2'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'cdegree'
	    var_list[3].units = 'cdegree'
	    var_list[4].units = 'cdegree'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	elif platform_name == 'CPGL336' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL336/03-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL336' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL336/03-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL336' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL336/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL336' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL336/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL336' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL336/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL336' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL336/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL336' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL336/05-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL336' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL336/05-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL336' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL336/01-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CPGL388' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL388/03-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL388' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL388/03-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL388' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL388/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL388' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL388/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL388' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL388/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL388' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL388/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL388' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL388/05-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL388' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL388/05-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL388' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL388/01-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CPGL335' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL335/03-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL335' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL335/03-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL335' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL335/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL335' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL335/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL335' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL335/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL335' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL335/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL335' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL335/05-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL335' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL335/05-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL335' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL335/01-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CPGL339' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL339/03-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL339' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL339/03-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL339' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL339/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL339' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL339/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL339' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL339/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL339' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL339/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL339' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL339/05-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL339' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL339/05-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL339' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL339/01-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CPGL340' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL340/03-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL340' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL340/03-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL340' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL340/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL340' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL340/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL340' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL340/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL340' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL340/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL340' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL340/05-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL340' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL340/05-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL340' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL340/01-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CPGL374' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL374/03-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL374' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL374/03-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL374' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL374/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL374' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL374/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL374' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL374/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL374' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL374/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL374' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL374/05-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL374' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL374/05-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL374' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL374/01-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CPGL375' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL375/03-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL375' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL375/03-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL375' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL375/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL375' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL375/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL375' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL375/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL375' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL375/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL375' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL375/05-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL375' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL375/05-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL375' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL375/01-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CPGL376' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL376/03-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL376' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL376/03-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL376' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL376/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL376' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL376/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL376' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL376/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL376' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL376/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL376' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL376/05-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL376' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL376/05-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL376' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL376/01-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CPGL379' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL379/03-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL379' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL379/03-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL379' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL379/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL379' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL379/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL379' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL379/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL379' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL379/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL379' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL379/05-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL379' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL379/05-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL379' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL379/01-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CPGL380' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL380/03-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL380' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL380/03-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL380' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL380/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL380' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL380/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL380' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL380/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL380' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL380/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL380' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL380/05-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL380' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL380/05-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL380' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL380/01-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CPGL387' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL387/03-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL387' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL387/03-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL387' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL387/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL387' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL387/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL387' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL387/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL387' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL387/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL387' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL387/05-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL387' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL387/05-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL387' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL387/01-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CPGL389' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL389/03-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL389' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL389/03-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL389' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL389/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL389' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL389/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL389' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL389/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL389' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL389/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL389' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL389/05-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL389' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL389/05-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL389' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL389/01-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CPGL514' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL514/03-CTDGVM000/telemetered/ctdgv_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL514' and node == 'GLIDER' and instrument_class == 'CTD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL514/03-CTDGVM000/recovered_host/ctdgv_m_glider_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_water_temp'
	    var_list[2].name = 'practical_salinity'
	    var_list[3].name = 'sci_seawater_density'
	    var_list[4].name = 'sci_water_pressure_dbar'
	    var_list[5].name = 'sci_water_cond'
	    var_list[6].name = 'lat'
	    var_list[7].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'degC'
	    var_list[2].units = 'unitless'
	    var_list[3].units = 'kg/m3'
	    var_list[4].units = 'dbar'
	    var_list[5].units = 'S/m'
	    var_list[6].units = 'degree_north'
	    var_list[7].units = 'degree_east'
	elif platform_name == 'CPGL514' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL514/04-DOSTAM000/telemetered/dosta_abcdjm_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL514' and node == 'GLIDER' and instrument_class == 'DOSTA' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL514/04-DOSTAM000/recovered_host/dosta_abcdjm_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'sci_oxy4_oxygen'
	    var_list[2].name = 'sci_abs_oxygen'
	    var_list[3].name = 'int_ctd_pressure'
	    var_list[4].name = 'lat'
	    var_list[5].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/kg'
	    var_list[3].units = 'dbar'
	    var_list[4].units = 'degree_north'
	    var_list[5].units = 'degree_east'
	elif platform_name == 'CPGL514' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL514/02-FLORTM000/telemetered/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL514' and node == 'GLIDER' and instrument_class == 'FLORT' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL514/02-FLORTM000/recovered_host/flort_m_sample'
	    var_list[0].name = 'time'
	    var_list[1].name = 'seawater_scattering_coefficient'
	    var_list[2].name = 'sci_flbbcd_chlor_units'
	    var_list[3].name = 'sci_flbbcd_cdom_units'
	    var_list[4].name = 'sci_flbbcd_bb_units'
	    var_list[5].name = 'optical_backscatter'
	    var_list[6].name = 'int_ctd_pressure'
	    var_list[7].name = 'lat'
	    var_list[8].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'm-1'
	    var_list[2].units = 'ug/L'
	    var_list[3].units = 'ppb'
	    var_list[4].units = 'm-1 sr-1'
	    var_list[5].units = 'm-1'
	    var_list[6].units = 'dbar'
	    var_list[7].units = 'degree_north'
	    var_list[8].units = 'degree_east'
	elif platform_name == 'CPGL514' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'Telemetered':
	    uframe_dataset_name = 'CP05MOAS/GL514/05-PARADM000/telemetered/parad_m_glider_instrument'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL514' and node == 'GLIDER' and instrument_class == 'PARAD' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL514/05-PARADM000/recovered_host/parad_m_glider_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'parad_m_par'
	    var_list[2].name = 'int_ctd_pressure'
	    var_list[3].name = 'lat'
	    var_list[4].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol photons m-2 s-1'
	    var_list[2].units = 'dbar'
	    var_list[3].units = 'degree_north'
	    var_list[4].units = 'degree_east'
	elif platform_name == 'CPGL514' and node == 'GLIDER' and instrument_class == 'ADCP' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP05MOAS/GL514/01-ADCPAM000/recovered_host/adcp_velocity_glider'
	    var_list[0].name = 'time'
	    var_list[1].name = 'bin_depths'
	    var_list[2].name = 'heading'
	    var_list[3].name = 'pitch'
	    var_list[4].name = 'roll'
	    var_list[5].name = 'eastward_seawater_velocity'
	    var_list[6].name = 'northward_seawater_velocity'
	    var_list[7].name = 'upward_seawater_velocity'
	    var_list[8].name = 'int_ctd_pressure'
	    var_list[9].name = 'lat'
	    var_list[10].name = 'lon'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[3].data = np.array([])
	    var_list[4].data = np.array([])
	    var_list[5].data = np.array([])
	    var_list[6].data = np.array([])
	    var_list[7].data = np.array([])
	    var_list[8].data = np.array([])
	    var_list[9].data = np.array([])
	    var_list[10].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'meters'
	    var_list[2].units = 'deci-degrees'
	    var_list[3].units = 'deci-degrees'
	    var_list[4].units = 'deci-degrees'
	    var_list[5].units = 'm/s'
	    var_list[6].units = 'm/s'
	    var_list[7].units = 'm/s'
	    var_list[8].units = 'dbar'
	    var_list[9].units = 'degree_north'
	    var_list[10].units = 'degree_east'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/SBD11/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/SBD11/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP03ISSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/SBD11/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP03ISSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/SBD11/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/SBD11/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSSM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/SBD11/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNPM/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP01CNPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNPM/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMCI' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCI/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMCI' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP02PMCI/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMCO' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMCO/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMCO' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP02PMCO/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMUI' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUI/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMUI' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP02PMUI/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMUO' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP02PMUO/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP02PMUO' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP02PMUO/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP03ISPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISPM/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP03ISPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISPM/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSPM/SBS01/01-MOPAK0000/telemetered/mopak_o_dcl_accel'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSPM' and node == 'BUOY' and instrument_class == 'MOPAK' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSPM/SBS01/01-MOPAK0000/recovered_host/mopak_o_dcl_accel_recovered'
	    var_list[0].name = 'time'
	    var_list[0].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'Telemetered':
	    uframe_dataset_name = 'CP04OSSM/RID26/07-NUTNRB000/telemetered/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP04OSSM/RID26/07-NUTNRB000/recovered_host/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CP04OSSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP04OSSM/RID26/07-NUTNRB000/recovered_inst/suna_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'Telemetered':
	    uframe_dataset_name = 'CP01CNSM/RID26/07-NUTNRB000/telemetered/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP01CNSM/RID26/07-NUTNRB000/recovered_host/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CP01CNSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP01CNSM/RID26/07-NUTNRB000/recovered_inst/suna_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'Telemetered':
	    uframe_dataset_name = 'CP03ISSM/RID26/07-NUTNRB000/telemetered/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredHost':
	    uframe_dataset_name = 'CP03ISSM/RID26/07-NUTNRB000/recovered_host/suna_dcl_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	elif platform_name == 'CP03ISSM' and node == 'NSIF' and instrument_class == 'NUTNR' and method == 'RecoveredInst':
	    uframe_dataset_name = 'CP03ISSM/RID26/07-NUTNRB000/recovered_inst/suna_instrument_recovered'
	    var_list[0].name = 'time'
	    var_list[1].name = 'nitrate_concentration'
	    var_list[2].name = 'salinity_corrected_nitrate'
	    var_list[0].data = np.array([])
	    var_list[1].data = np.array([])
	    var_list[2].data = np.array([])
	    var_list[0].units = 'seconds since 1900-01-01'
	    var_list[1].units = 'umol/L'
	    var_list[2].units = 'umol/L'
	else:
	    print('Illegal platform_name, node, instrument_class, method or combination thereof.')
	return(uframe_dataset_name,var_list)